<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Robin 的个人主页</title>
    <link>https://jianzhnie.github.io/post/</link>
      <atom:link href="https://jianzhnie.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>zh-Hans</language><lastBuildDate>Sat, 22 Oct 2022 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://jianzhnie.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://jianzhnie.github.io/post/</link>
    </image>
    
    <item>
      <title>Hugo &#43; Github Pages 搭建个人博客</title>
      <link>https://jianzhnie.github.io/post/hugo_site/</link>
      <pubDate>Sat, 22 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://jianzhnie.github.io/post/hugo_site/</guid>
      <description>&lt;h2 id=&#34;使用-hugo-搭建博客&#34;&gt;使用 Hugo 搭建博客&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; 是用 Go 实现的博客工具，采用 Markdown 进行文章编辑，自动生成静态站点文件，支持丰富的主题配置，也可以通过 js 嵌入像是评论系统等插件，高度定制化。除了 Hugo 外， 还有 Gatsby、Jekyll、Hexo、Ghost 等选择，实现和使用都差不多，可以根据自己的偏好进行选择。&lt;/p&gt;
&lt;h3 id=&#34;安装-hugo&#34;&gt;安装 Hugo&lt;/h3&gt;
&lt;p&gt;我使用的是 macOS，所以使用官方推荐的 homebrew 方式进行 hugo 程序的安装，其他系统也类似。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;完成后，使用以下命令进行验证：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;创建-hugo-网站&#34;&gt;创建 Hugo 网站&lt;/h3&gt;
&lt;p&gt;通过上述命令安装 hugo 程序后，就可以通过 &lt;code&gt;hugo new site&lt;/code&gt; 命令进行网站创建、配置与本地调试了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new site robin-site
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Congratulations! Your new Hugo site is created in /Users/jianzhengnie/work_dir/personal_home/robin-site.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Just a few more steps and you&lt;span class=&#34;err&#34;&gt;&amp;#39;&lt;/span&gt;re ready to go:
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;1. Download a theme into the same-named folder.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   Choose a theme from https://themes.gohugo.io/ or
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   create your own with the &lt;span class=&#34;s2&#34;&gt;&amp;#34;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;#34;&lt;/span&gt; command.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;2. Perhaps you want to add some content. You can add single files
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   with &lt;span class=&#34;s2&#34;&gt;&amp;#34;hugo new &amp;lt;SECTIONNAME&amp;gt;/&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;#34;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;3. Start the built-in live server via &lt;span class=&#34;s2&#34;&gt;&amp;#34;hugo server&amp;#34;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Visit https://gohugo.io/ &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; quickstart guide and full documentation.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;注：后续命令未经说明，均在cmd中的robin-site根目录下运行&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;创建完成后，根目录 robin-site 包含以下文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── archetypes: default.md是生成博文的模版
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── assets &lt;span class=&#34;c1&#34;&gt;# 存放被 Hugo Pipes 处理的文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── content &lt;span class=&#34;c1&#34;&gt;# 存放markdown文件作为博文内容&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── data &lt;span class=&#34;c1&#34;&gt;# 存放 Hugo 处理的数据&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── layouts &lt;span class=&#34;c1&#34;&gt;# 存放布局文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── static &lt;span class=&#34;c1&#34;&gt;# 存放静态文件 图片 CSS JS文件&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;├── themes: 存放不同的主题
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;└── config.toml: 博客配置文件支持 JSON YAML TOML 三种格式配置文件
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;配置主题&#34;&gt;配置主题&lt;/h3&gt;
&lt;p&gt;当通过上文命令创建我们的站点后，需要进行主题配置，Hugo 社区有了很丰富的主题，可以通过官网 &lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Themes&lt;/a&gt; 菜单选择自己喜欢的风格，查看预览效果，选择后可以进入主题项目仓库，一般都会有很详细的安装及配置说明。&lt;/p&gt;
&lt;p&gt;官方主题网站: &lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://themes.gohugo.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;主题推荐:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pure: &lt;a href=&#34;https://themes.gohugo.io/hugo-theme-pure/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://themes.gohugo.io/hugo-theme-pure/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;关联主题仓库&#34;&gt;关联主题仓库&lt;/h4&gt;
&lt;p&gt;我们可以将主题仓库直接 &lt;code&gt;git clone&lt;/code&gt; 下来进行使用，例如在根目录robin-site下运行以下代码，即可下载pure主题.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git clone https://github.com/xiaoheiAh/hugo-theme-pure themes/pure
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这种方式有一些弊端，当之后自己对主题进行修改后，可能会与原主题产生一些冲突，不方便版本管理与后续更新。官方更推荐使用的是将原主题仓库 &lt;code&gt;fork&lt;/code&gt; 到自己的账户，并使用 &lt;code&gt;git submodule&lt;/code&gt; 方式进行仓库链接，这样后续可以对主题的修改进行单独维护。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt;  robin-site/
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule add https://github.com/pseudoyu/pure themes/pure
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后在根目录下的 &lt;code&gt;config.toml&lt;/code&gt;文件中添加新的一行:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;theme&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;pure&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;更新主题&#34;&gt;更新主题&lt;/h4&gt;
&lt;p&gt;如果是 clone 了其他人的博客项目进行修改，则需要用以下命令进行初始化：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule update --init --recursive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果需要同步主题仓库的最新修改，需要运行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git submodule update --remote
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;新建博文&#34;&gt;新建博文&lt;/h3&gt;
&lt;p&gt;完成后，可以通过 &lt;code&gt;hugo new&lt;/code&gt; 命令发布新文章。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new posts/test.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;title: &amp;#34;Test&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;date: 2022-10-21T19:00:43+08:00
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;draft: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这个命令会在 &lt;code&gt;content&lt;/code&gt; 目录下建立 &lt;code&gt;post&lt;/code&gt; 目录，并在 &lt;code&gt;post&lt;/code&gt; 下生成 &lt;code&gt;test.md&lt;/code&gt; 文件，博文书写就在这个文件里使用 Markdown 语法完成。博文的 front matter 里&lt;code&gt;draft&lt;/code&gt; 选项默认为 &lt;code&gt;true&lt;/code&gt;，需要改为 &lt;code&gt;false&lt;/code&gt; 才能发表博文，建议直接更改上面说的&lt;code&gt;archetypes&lt;/code&gt; 目录下的 &lt;code&gt;default&lt;/code&gt; 文件，把 &lt;code&gt;draft: true&lt;/code&gt; 改为 &lt;code&gt;draft: false&lt;/code&gt;，这样生成的博文就是默认可以发表的。&lt;/p&gt;
&lt;h3 id=&#34;生成网页&#34;&gt;生成网页&lt;/h3&gt;
&lt;p&gt;为了查看生成的博客的效果，我们在本地编辑调试时可以通过 &lt;code&gt;hugo server&lt;/code&gt; 命令进行本地实时调试预览，无须每次都重新生成。在cmd中运行以下命令，即我们可以通过浏览器  http://localhost:1313/ 地址访问我们的本地预览网页。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo server -D
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;但此时只能在本地访问，如果想发布到 &lt;code&gt;Github Pages&lt;/code&gt; ， 还需要借助 GithubPages 工具。&lt;/p&gt;
&lt;h3 id=&#34;配置文件&#34;&gt;&lt;strong&gt;配置文件&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;打开配置config.toml可以看到很多的参数可以配置，这里只描述最基本的内容，不同的主题可能会支持不同的参数配置，具体请看对应主题的说明文档。baseURL是站点的域名。title是站点的名称。theme是站点的主题。还有关于评论和打赏的相关配置，这些配置都可以参考官网主题的说明。&lt;/p&gt;
&lt;p&gt;每次发布的时候，都需要先执行hugo，把新写的文档按照主题进行渲染，所有生成的文件默认都在当前pulic的子目录下，可以在config里面配置到其他目录。然后把所有新的文件提交到github。提交代码之后，要等一段时间才生效。&lt;/p&gt;
&lt;h2 id=&#34;github-pages-发布博客&#34;&gt;GitHub Pages 发布博客&lt;/h2&gt;
&lt;p&gt;我们希望 Hugo 生成的静态网站能通过 GitHub Pages 服务进行托管，而无需自己维护服务，更稳定、安全，因此我们需要上传 Hugo 生成的静态网页文件至 GitHub Page 项目仓库。&lt;/p&gt;
&lt;h3 id=&#34;github-pages-到底是在做什么&#34;&gt;&lt;strong&gt;Github Pages 到底是在做什么？&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;A：Github Pages 本质上是一个静态网站托管系统，你可以使用它为你的每一个仓库制作一个静态网页入口。&lt;/p&gt;
&lt;p&gt;它有两种存在方式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;识别 master branch 根目录下的：&lt;a href=&#34;&#34;&gt;README.md&lt;/a&gt; 或者 index.html&lt;/li&gt;
&lt;li&gt;识别 master branch 的 /docs 目录下的：&lt;a href=&#34;&#34;&gt;README.md&lt;/a&gt; 或者 index.html&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;也就是说：我们可以把我们的静态网页直接存在 master branch，并在 Github Repository 的 Setting 页中打开 Github Pages 选项，就可以通过一个域名访问到我们的想要的网站了。&lt;/p&gt;
&lt;h3 id=&#34;实战操作部署-hugo-作为一个-github-pages&#34;&gt;实战操作：部署 Hugo 作为一个 Github Pages&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;将 Hugo 部署为 Github Pages 项目，并使用简单的 shell 脚本自动化整个过程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;第一步： &lt;strong&gt;创建一个 Github 仓库&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;登录后，点击右上角，出现下拉菜单，点击 Your repositories 进入页面&lt;/li&gt;
&lt;li&gt;点击 New&lt;/li&gt;
&lt;li&gt;进入 Creat a new repository 页面&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Repository name&lt;/code&gt; 这里一定要填 &lt;code&gt;[你的github帳號].github.io&lt;/code&gt;，像我的帳號是 &lt;code&gt;jianzhnie&lt;/code&gt;，所以我就要輸入 &lt;code&gt;jianzhnie.github.io&lt;/code&gt;，然後按 &lt;code&gt;[Create Repository]&lt;/code&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;第二步：创建新文章&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new posts/my-first-post.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里面值得注意的是，通过上述命令行创建的文章中，会自动生成一部分文本如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;title: &amp;#34;My First Post&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;date: 2019-03-26T08:47:11+01:00
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;draft: true
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我们需要把 draft : true 修改成 draft : false 才可以上传这篇文章&lt;/p&gt;
&lt;p&gt;第三步：&lt;strong&gt;修改配置文件 config.toml&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;站点目录**&lt;code&gt;config.toml&lt;/code&gt;&lt;strong&gt;中&lt;/strong&gt;&lt;code&gt;baseURL&lt;/code&gt;**要换成自己建立的仓库，如baseURL = “https://jianzhnie.github.io/&amp;quot;&lt;/p&gt;
&lt;p&gt;第四步： 进入&lt;strong&gt;站点根目录&lt;/strong&gt;下，执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行后，站点根目录下会生成一个 &lt;code&gt;public&lt;/code&gt; 文件夹，该文件下的内容即Hugo生成的整个静态网站。每次更新内容后，将 pubilc 目录里所有文件 push到GitHub即可。&lt;/p&gt;
&lt;p&gt;第五步：上传代码至 master&lt;/p&gt;
&lt;p&gt;首次使用的时候要执行以下命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin https://github.com/jianzhnie/jianzhnie.github.io.git &lt;span class=&#34;c1&#34;&gt;# 将本地目录链接到远程服务器的代码仓库&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;[介绍，随便写点什么，比如日期]&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;稍等几分钟即可通过我们的自定义域名来访问我们的博客站点了，和我们 &lt;code&gt;hugo server&lt;/code&gt; 本地调试完全一致。&lt;/p&gt;
&lt;p&gt;以后每次&lt;strong&gt;站点目录&lt;/strong&gt;下执行 &lt;code&gt;hugo&lt;/code&gt; 命令后，再到&lt;code&gt;public&lt;/code&gt;下执行推送命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add -A
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &amp;#34;[介绍，随便写点什么，比如日期]&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;用-github-的-gh-pages-分支展示自己的项目&#34;&gt;用 Github 的 gh-pages 分支展示自己的项目&lt;/h2&gt;
&lt;p&gt;上根据上面的教程， 我们可以 创建个人的博客网站，如 &lt;code&gt;https://jianzhnie.github.io&lt;/code&gt;, 这个网站一般是作为个人博客或者学术主页，如果我们还有其他项目需要展示， 如项目文档，产品文档，学习笔记等， 那这个主页就不够用了。&lt;/p&gt;
&lt;p&gt;下面介绍一种解决方案，用 Github 的 gh-pages 分支展示自己的项目。Github创建项目仓库后随即只产生一个master分支，只需要再添加&lt;code&gt;gh-pages&lt;/code&gt;分支就可以创建静态页面了。这利用了项目站点（即Project Pages）的方式。&lt;/p&gt;
&lt;p&gt;下面通过一个例子来说明 gh-pages  的使用：&lt;/p&gt;
&lt;p&gt;第一步： &lt;strong&gt;创建一个 Github 仓库&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;例如新建一个 &lt;code&gt;deeplearning-notes&lt;/code&gt; 的仓库，主要用于记录深度学习的笔记， GitHub 地址： &lt;a href=&#34;https://github.com/jianzhnie/deeplearning-notes&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/jianzhnie/deeplearning-notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二步， 同样的参考上面搭建网站的方式,  新建一个网站：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hugo new site &lt;/code&gt;  project&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第三步， 新建一篇笔记：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;hugo new posts/deeplearning.md&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第四步：&lt;strong&gt;修改配置文件 config.toml&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;站点目录**&lt;code&gt;config.toml&lt;/code&gt;&lt;strong&gt;中&lt;/strong&gt;&lt;code&gt;baseURL&lt;/code&gt;**要换成自己建立的仓库，如baseURL = “https://jianzhnie.github.io/deeplearning-notes/&amp;quot;&lt;/p&gt;
&lt;p&gt;第五步： 进入&lt;strong&gt;站点根目录&lt;/strong&gt;下，执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;执行后，站点根目录下会生成一个 &lt;code&gt;public&lt;/code&gt; 文件夹，该文件下的内容即Hugo生成的整个静态网站。&lt;/p&gt;
&lt;p&gt;第六步：初始化项目，并设置 gh-pages 分支&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;cd public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin https://github.com/jianzhnie/jianzhnie.github.io.git # 将本地目录链接到远程服务器的代码仓库
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git checkout -b gh-pages
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &amp;#34;[介绍，随便写点什么，比如日期]&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u --set-upstream origin gh-pages
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第七步：打开 &lt;a href=&#34;https://jianzhnie.github.io/deeplearning-notes/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://jianzhnie.github.io/deeplearning-notes/&lt;/a&gt; 就可以看到项目的相关文档了。&lt;/p&gt;
&lt;h2 id=&#34;github-action-自动发布&#34;&gt;Github Action 自动发布&lt;/h2&gt;
&lt;p&gt;通过上述命令我们可以手动发布我们的静态文件，但还是有以下弊端：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;发布步骤还是比较繁琐，本地调试后还需要切换到 &lt;code&gt;public/&lt;/code&gt; 目录进行上传&lt;/li&gt;
&lt;li&gt;无法对博客 &lt;code&gt;.md&lt;/code&gt; 源文件进行备份与版本管理&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此，我们需要简单顺滑的方式来进行博客发布，首先我们初始化博客源文件的仓库，如我的仓库为 &lt;a href=&#34;https://github.com/pseudoyu/yu-blog&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pseudoyu/yu-blog&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;因为我们的博客基于 GitHub 与 GitHub Pages，可以通过官方提供的 GitHub Action 进行 CI 自动发布，下面我会进行详细讲解。GitHub Action 是一个持续集成和持续交付(CI/CD) 平台，可用于自动执行构建、测试和部署管道，目前已经有很多开发好的工作流，可以通过简单的配置即可直接使用。&lt;/p&gt;
&lt;p&gt;配置在仓库目录 &lt;code&gt;.github/workflows&lt;/code&gt; 下，以 &lt;code&gt;.yml&lt;/code&gt; 为后缀。我的 GitHub Action 配置为 &lt;a href=&#34;https://github.com/pseudoyu/yu-blog/blob/master/.github/workflows/deploy.yml&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;pseudoyu/yu-blog deploy.yml&lt;/a&gt;，自动发布示例配置如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;push&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;workflow_dispatch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;schedule&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# Runs everyday at 8:00 AM&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;cron&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;0 0 * * *&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;jobs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;runs-on&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;steps&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Checkout&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;actions/checkout@v2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;submodules&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;fetch-depth&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;m&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Setup Hugo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;peaceiris/actions-hugo@v2&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;hugo-version&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;latest&amp;#34;&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Build Web&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;run&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;hugo&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;            &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;Deploy Web&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;uses&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;peaceiris/actions-gh-pages@v3&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;              &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;with&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PERSONAL_TOKEN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ secrets.PERSONAL_TOKEN }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;EXTERNAL_REPOSITORY&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;pseudoyu/pseudoyu.github.io&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PUBLISH_BRANCH&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;master&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;PUBLISH_DIR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;./public&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;                  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;commit_message&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;${{ github.event.head_commit.message }}&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;on&lt;/code&gt; 表示 GitHub Action 触发条件，我设置了 &lt;code&gt;push&lt;/code&gt;、&lt;code&gt;workflow_dispatch&lt;/code&gt; 和 &lt;code&gt;schedule&lt;/code&gt; 三个条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;push&lt;/code&gt;，当这个项目仓库发生推送动作后，执行 GitHub Action&lt;/li&gt;
&lt;li&gt;&lt;code&gt;workflow_dispatch&lt;/code&gt;，可以在 GitHub 项目仓库的 Action 工具栏进行手动调用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;schedule&lt;/code&gt;，定时执行 GitHub Action，如我的设置为北京时间每天早上执行，主要是使用一些自动化统计 CI 来自动更新我博客的关于页面，如本周编码时间，影音记录等，如果你不需要定时功能，可以删除这个条件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;jobs&lt;/code&gt; 表示 GitHub Action 中的任务，我们设置了一个 &lt;code&gt;build&lt;/code&gt; 任务，&lt;code&gt;runs-on&lt;/code&gt; 表示 GitHub Action 运行环境，我们选择了 &lt;code&gt;ubuntu-latest&lt;/code&gt;。我们的 &lt;code&gt;build&lt;/code&gt; 任务包含了 &lt;code&gt;Checkout&lt;/code&gt;、&lt;code&gt;Setup Hugo&lt;/code&gt;、&lt;code&gt;Build Web&lt;/code&gt; 和 &lt;code&gt;Deploy Web&lt;/code&gt; 四个主要步骤，其中 &lt;code&gt;run&lt;/code&gt; 是执行的命令，&lt;code&gt;uses&lt;/code&gt; 是 GitHub Action 中的一个插件，我们使用了 &lt;code&gt;peaceiris/actions-hugo@v2&lt;/code&gt; 和 &lt;code&gt;peaceiris/actions-gh-pages@v3&lt;/code&gt; 这两个插件。其中 &lt;code&gt;Checkout&lt;/code&gt; 步骤中 &lt;code&gt;with&lt;/code&gt; 中配置 &lt;code&gt;submodules&lt;/code&gt; 值为 &lt;code&gt;true&lt;/code&gt; 可以同步博客源仓库的子模块，即我们的主题模块。&lt;/p&gt;
&lt;p&gt;首先需要将上述 &lt;code&gt;deploy.yml&lt;/code&gt; 中的 &lt;code&gt;EXTERNAL_REPOSITORY&lt;/code&gt; 改为自己的 GitHub Pages 仓库，如我的设置为 &lt;code&gt;pseudoyu/pseudoyu.github.io&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;因为我们需要从博客仓库推送到外部 GitHub Pages 仓库，需要特定权限，要在 GitHub 账户下 &lt;code&gt;Setting - Developer setting - Personal access tokens&lt;/code&gt; 下创建一个 Token。&lt;/p&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结&lt;/h2&gt;
&lt;p&gt;以上整个环境部署好之后，接下来的常用命令就是以下几个：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;站点目录&lt;/strong&gt;下，新建文章，执行：&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new post/文章名.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;添加文章内容或修改，包括修改主题之类的，在本地进行调试&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;修改完成，确定要上传到GitHub上后，&lt;strong&gt;站点目录&lt;/strong&gt;下执行：&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;进行编译，没错误的话修改的内容就顺利同步到&lt;code&gt;public&lt;/code&gt;下了，然后**&lt;code&gt;cd public&lt;/code&gt;**下，执行提交命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add -A
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;20200204-1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push -u origin master
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;选择和配置hugo-主题&#34;&gt;选择和配置Hugo 主题&lt;/h2&gt;
&lt;h3 id=&#34;流行的-hugo-主题&#34;&gt;流行的 Hugo 主题&lt;/h3&gt;
&lt;p&gt;使用 Hugo 博客时，我们最希望的是找到适合自己的一款主题，下面将图文结合介绍一些流行的 Hugo 主题。此外，关于写作的方法和 Hugo 主题修改，可以查阅本文参考中的 Hugo 官方文档，这里不再赘述。&lt;/p&gt;
&lt;h4 id=&#34;hugo-流行主题之-1meme&#34;&gt;Hugo 流行主题之 1：MemE&lt;/h4&gt;
&lt;p&gt;MemE 是一个强大且可高度定制的 GoHugo 博客主题，专为个人博客设计。MemE 主题专注于优雅、简约、现代，以及代码的正确性。Github 地址：https://github.com/reuixiy/hugo-theme-meme。&lt;/p&gt;
&lt;h4 id=&#34;hugo-流行主题之-2clarity&#34;&gt;Hugo 流行主题之 2：Clarity&lt;/h4&gt;
&lt;p&gt;基于 VMware 的开源 Clarity 设计系统，具有丰富的代码支持、暗/光模式、移动支持等特点，为 Hugo 设计了一个具有技术意识的主题。Github 地址：https://github.com/chipzoller/hugo-clarity&lt;/p&gt;
&lt;h4 id=&#34;hugo-流行主题之-3--loveit&#34;&gt;Hugo 流行主题之 3：  LoveIt&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dillonzq/LoveIt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LoveIt&lt;/a&gt; 是一个&lt;strong&gt;简洁&lt;/strong&gt;、&lt;strong&gt;优雅&lt;/strong&gt;且&lt;strong&gt;高效&lt;/strong&gt;的 &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; 博客主题。Github 地址： &lt;a href=&#34;https://github.com/dillonzq/LoveIt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/dillonzq/LoveIt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;它的原型基于 &lt;a href=&#34;https://github.com/liuzc/LeaveIt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;LeaveIt 主题&lt;/a&gt; 和 &lt;a href=&#34;https://github.com/Fastbyte01/KeepIt&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;KeepIt 主题&lt;/a&gt;。LoveIt 主题 &lt;a href=&#34;https://circleci.com/gh/dillonzq/LoveIt/tree/master&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://circleci.com/gh/dillonzq/LoveIt/tree/master&lt;/a&gt;)&lt;/p&gt;
&lt;h4 id=&#34;hugo-流行主题之-4--hugo-book-theme&#34;&gt;Hugo 流行主题之 4：  Hugo Book Theme&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt; documentation theme as simple as plain book. Github  地址： &lt;a href=&#34;https://github.com/alex-shpak/hugo-book&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/alex-shpak/hugo-book&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;hugo-流行主题之-5hugo-academic-theme-----&#34;&gt;Hugo 流行主题之 5：Hugo Academic Theme （* * * * *）&lt;/h4&gt;
&lt;p&gt;Hugo Academic Theme 创建一个学术网站. Easily create a beautiful academic résumé or educational website using Hugo, GitHub, and Netlify. github地址： &lt;a href=&#34;https://github.com/wowchemy/starter-hugo-academic&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/wowchemy/starter-hugo-academic&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;hugo--流行主题之-6--hugo-learn-theme-------&#34;&gt;Hugo  流行主题之 6 ： Hugo Learn Theme   （* * * * *）&lt;/h4&gt;
&lt;p&gt;This repository contains a theme for &lt;a href=&#34;https://gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo&lt;/a&gt;, based on great &lt;a href=&#34;https://learn.getgrav.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Grav Learn Theme&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Visit the &lt;a href=&#34;https://learn.netlify.com/en/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;theme documentation&lt;/a&gt; to see what is going on. It is actually built with this theme.&lt;/p&gt;
&lt;h4 id=&#34;hugo--流行主题之-7--doks&#34;&gt;Hugo  流行主题之 7:  Doks&lt;/h4&gt;
&lt;p&gt;Modern Documentation Theme&lt;/p&gt;
&lt;p&gt;Doks is a Hugo theme for building secure, fast, and SEO-ready documentation websites, which you can easily update and customize.&lt;/p&gt;
&lt;h3 id=&#34;配置-hugo-主题&#34;&gt;配置 Hugo 主题&lt;/h3&gt;
&lt;p&gt;最好的搜索方式是在 &lt;a href=&#34;https://link.segmentfault.com/?enc=bb3uhrKTHsLlmrcsJuKTEQ%3D%3D.SUzhbzimTsmhRR9j6wDNC2E3qL5or16iSY2UP6ECWBo%3D&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/&lt;/a&gt; 中，搜索关键词：&lt;code&gt;hugo theme&lt;/code&gt;。或者使用搜索引擎，搜索：&lt;code&gt;hugo theme site:github.com&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;然后进入到项目目录中，下载安装我们需要的主题：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-awk&#34; data-lang=&#34;awk&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;clone&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;https&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;/github.com/theme-demo.git themes/theme-demo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;cp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;themes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;demo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_source&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/*&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;source&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;希望使用下载的主题，添加 themes/theme-demo/exampleSite/config.toml 中的配置，还需要在 config.toml 中配置主题：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-abnf&#34; data-lang=&#34;abnf&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nc&#34;&gt;theme&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;l&#34;&gt;&amp;#34;theme-demo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此外，在有些 theme-demo 文件夹中会有 demo 或 example 目录，文件结构与新建的 Hugo 项目的文件结构几乎是一样的，这样设置是为了用户的配置可以覆盖掉主题的配置。&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://leidawt.github.io/post/%E5%80%9F%E5%8A%A9hugo%E5%92%8Cacademic%E4%B8%BB%E9%A2%98%E5%9C%A8github/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://leidawt.github.io/post/%E5%80%9F%E5%8A%A9hugo%E5%92%8Cacademic%E4%B8%BB%E9%A2%98%E5%9C%A8github/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/%E9%80%B2%E6%93%8A%E7%9A%84-git-git-git/%E5%BE%9E%E9%9B%B6%E9%96%8B%E5%A7%8B-%E7%94%A8github-pages-%E4%B8%8A%E5%82%B3%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99-fa2ae83e6276&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://medium.com/%E9%80%B2%E6%93%8A%E7%9A%84-git-git-git/%E5%BE%9E%E9%9B%B6%E9%96%8B%E5%A7%8B-%E7%94%A8github-pages-%E4%B8%8A%E5%82%B3%E9%9D%9C%E6%85%8B%E7%B6%B2%E7%AB%99-fa2ae83e6276&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cnblogs.com/MuYunyun/p/6082359.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.cnblogs.com/MuYunyun/p/6082359.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;show case
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/andrewheiss/datavizs21.classes.andrewheiss.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/andrewheiss/datavizs21.classes.andrewheiss.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://datavizs21.classes.andrewheiss.com/content/05-content/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://datavizs21.classes.andrewheiss.com/content/05-content/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wowchemy.com/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://wowchemy.com/templates/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/wowchemy/starter-hugo-research-group&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/wowchemy/starter-hugo-research-group&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Diamond</title>
      <link>https://jianzhnie.github.io/post/diamond/</link>
      <pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://jianzhnie.github.io/post/diamond/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;将序列比对到nt、nr、uniprot、pfam等数据库是常有的事，blast无疑是最常用的比对软件，但是它的速度一直提不起来，非常耗费时间。估计比对等不到blast的结果了，于是想到了另一款软件Diamond&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;diamond简介&#34;&gt;Diamond简介&lt;/h2&gt;
&lt;p&gt;序列比对软件，能输出与BLAST类似的结果，但是速度快了数百倍。&lt;/p&gt;
&lt;p&gt;对于长序列，支持Frameshift alignments；&lt;/p&gt;
&lt;p&gt;占用资源更少，但只是相对blast来讲；&lt;/p&gt;
&lt;p&gt;自定义多种输出格式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;记得引用：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Buchfink B, Xie C, Huson DH, “Fast and sensitive protein alignment using DIAMOND”, &lt;em&gt;Nature Methods&lt;/em&gt; &lt;strong&gt;12&lt;/strong&gt;, 59-60 (2015). &lt;a href=&#34;https://doi.org/10.1038/nmeth.3176&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;doi:10.1038/nmeth.3176&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;diamond使用&#34;&gt;Diamond使用&lt;/h2&gt;
&lt;p&gt;还是conda安装好diamond，说明书在此：https://github.com/bbuchfink/diamond/raw/master/diamond_manual.pdf&lt;/p&gt;
&lt;h3 id=&#34;第一步-准备数据集&#34;&gt;第一步: 准备数据集&lt;/h3&gt;
&lt;p&gt;先从NCBI上下载蛋白数据库。 NR库是NCBI的非冗余蛋白数据库，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget ftp://ftp.ncbi.nlm.nih.gov/blast/db/FASTA/nr.gz
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;gunzip nr.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;第二步-建库&#34;&gt;第二步: 建库&lt;/h3&gt;
&lt;p&gt;就两个参数，&lt;code&gt;--in nr&lt;/code&gt;输入文件，&lt;code&gt;--db nr&lt;/code&gt; 输出的数据库前缀&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;diamond makedb --in nr.faa -db nr -p &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最近下载了一个nr数据库，解压完是110G，命名为nr.faa.&lt;/p&gt;
&lt;p&gt;结果会生成一个nr.dmnd的索引文件&lt;/p&gt;
&lt;p&gt;我用了20核构建了110G的nr数据库，用时5726.56s，作为参考&lt;/p&gt;
&lt;p&gt;Pfam数据库7.1G，24核用时190.931s，还是非常快的&lt;/p&gt;
&lt;p&gt;附带数据库下载地址：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Nr&lt;/strong&gt;：http://mirrors.vbi.vt.edu/mirrors/ftp.ncbi.nih.gov/blast/db/FASTA/nr.gz&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pfam&lt;/strong&gt;：ftp://ftp.ebi.ac.uk/pub/databases/Pfam/releases/Pfam32.0/Pfam-A.fasta.gz&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Uniprot:&lt;/strong&gt; &lt;a href=&#34;ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz&#34;&gt;ftp://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;第三步-搜索&#34;&gt;第三步: 搜索&lt;/h3&gt;
&lt;p&gt;就两个子命令，blastp和blastx，前者比对蛋白，后者比对DNA序列&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# 因为要将核酸序列比对到蛋白库，因此使用blastx功能&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;diamond blastx -d nr -q reads.fna -o nr.matches
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;默认输出格式是BLAST的tab结果，&lt;code&gt;-o&lt;/code&gt;指定输出文件名&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-q/ &amp;ndash;query输入检索序列&lt;/li&gt;
&lt;li&gt;&amp;ndash;out/ -o输出文件，默认以&amp;ndash;outfmt 6输出结果和BLAST+的&amp;ndash;outfmt 6结果一致。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;需要注意的是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个过程需要消耗大量的内存与硬盘（用于存放临时文件），如果资源不够，可以设置&lt;code&gt;-b&lt;/code&gt;参数调整&lt;/li&gt;
&lt;li&gt;默认的比对模式（fast模式）是针对短序列的，如果要比对的序列比较长，建议使用sensitive模式，设置&lt;code&gt;—sensitive&lt;/code&gt;或者&lt;code&gt;--more-sensitive&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;运行时间不与比对文件大小成正比，相反，文件越大（比如大于1M reads）比对速度越快&lt;/li&gt;
&lt;li&gt;比对结果中的X表示Masked residues&lt;/li&gt;
&lt;li&gt;默认的阈值是0.001而Blast是10，相比之下，diamond比对更严格，得到的weak hits会更少&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Protein 数据库</title>
      <link>https://jianzhnie.github.io/post/protein%E6%95%B0%E6%8D%AE%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://jianzhnie.github.io/post/protein%E6%95%B0%E6%8D%AE%E4%BB%8B%E7%BB%8D/</guid>
      <description>&lt;h3 id=&#34;go数据库&#34;&gt;GO数据库：&lt;/h3&gt;
&lt;p&gt;官网及详细说明：&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//links.jianshu.com/go%3Fto%3Dhttp%3A%2F%2Fgeneontology.org%2Fdocs%2Fdownload-ontology%2F&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://geneontology.org/docs/download-ontology/&lt;/a&gt;
具体GO数据库的搭建参考Blast2go文章详解&lt;/p&gt;
&lt;h3 id=&#34;kegg数据库&#34;&gt;Kegg数据库：&lt;/h3&gt;
&lt;p&gt;KEGG（Kyoto Encyclopedia of Genes and Genomes）京都基因和基因组百科全书，是研究Pathway代谢通路的最主要数据库，整合了基因组信息、化学信息、系统信息及疾病和健康信息。&lt;/p&gt;
&lt;h3 id=&#34;uniprot-数据库&#34;&gt;UniProt 数据库：&lt;/h3&gt;
&lt;p&gt;Unified Protein Database（简称UniProt）是信息最丰富、资源最广的蛋白质序列数据库，含蛋白质序列，功能信息，研究论文索引等信息, 整合了包括EBI（ European Bioinformatics Institute），SIB（the Swiss Institute of Bioinformatics），PIR（Protein Information Resource）三大数据库的资源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;EBI（ European Bioinformatics Institute）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;欧洲生物信息学研究所（EMBL-EBI）是欧洲生命科学旗舰实验室EMBL的一部分。位于英国剑桥欣克斯顿的惠康基因组校内，是世界上基因组学领域最强的存在之一。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SIB（the Swiss Institute of Bioinformatics）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;瑞士日内瓦的SIB维护着ExPASy（专家蛋白质分析系统）服务器，这里包含有蛋白质组学工具和数据库的主要资源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PIR（Protein Information Resource）：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PIR是美国国家生物医学研究基金会（NBRF）于1984年创立，旨在协助研究人员识别和解释蛋白质序列信息。&lt;/p&gt;
&lt;p&gt;Uniprot数据库主要子数据库组成：&lt;/p&gt;
&lt;p&gt;以上子数据库间的关系如下：Uniprot会收集EMBL，GenBank，DDBJ等公共数据库中的蛋白质序列及功能信息等原始数据，处理后存入UniParc的非冗余蛋白质序列数据库；UniPrc作为数据仓库，再分别给UniProtKB，Proteomes，UNIRef提供可靠的数据集，其中在UniProtKB数据库中Swiss-Prot是由TrEMBL经过手动注释后得到的高质量非冗余数据库，也是我们最常用的蛋白质数据库之一。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.omicsclass.com/image/show/attachments-2022-01-QRiCJpWl61e81e76a783e.jpg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;Protein%20%E5%8A%9F%E8%83%BD%E6%B3%A8%E9%87%8A.assets/attachments-2022-01-QRiCJpWl61e81e76a783e.jpg&#34; alt=&#34;attachments-2022-01-QRiCJpWl61e81e76a783e.jpg&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Uniprot数据库官方链接：https://www.uniprot.org/&lt;/p&gt;
&lt;h4 id=&#34;uniprotkbswiss-prot&#34;&gt;&lt;strong&gt;UniProtKB/Swiss-Prot&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;高质量的、手工注释的、非冗余的数据集&lt;/p&gt;
&lt;p&gt;Swiss-Prot旨在提供与高水平注释（例如，蛋白质功能，其域结构，翻译后修饰，变体等的描述）相关的可靠蛋白质序列，最小程度的冗余和高水平与其他数据库的集成级别。注释主要来自文献中的研究成果和E-value校验过计算分析结果，有质量保证的数据才被加入该数据库 。&lt;/p&gt;
&lt;p&gt;Swiss-Prot由Amos Bairoch博士在1986年创建，由瑞士生物信息学研究所开发，随后由欧洲生物信息学研究所的Rolf Apweiler开发。也是说EBI和SIB共同制作了Swiss-Prot和TrEMBL数据库。&lt;/p&gt;
&lt;p&gt;Swiss-Prot条目的注释中使用了一系列序列分析工具。包括手动评估，计算机预测，并选择结果包含在相应的条目中。这些预测包括翻译后修饰，跨膜结构域和拓扑，信号肽，结构域识别和蛋白质家族分类。&lt;/p&gt;
&lt;p&gt;来自相同基因和相同物种的序列合并到相同的数据库条目中。确定序列之间的差异包含：可变剪接，自然变异，错误的起始位点，错误的外显子边界，移码，未识别的冲突。&lt;/p&gt;
&lt;p&gt;注释会用相关出版物通过搜索数据库（例如PubMed）进行识别。阅读每篇论文的全文，然后提取信息并将其添加到条目中。科学文献中的注释包括但不限于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;蛋白质和基因名称&lt;/li&gt;
&lt;li&gt;功能&lt;/li&gt;
&lt;li&gt;特定于酶的信息，例如催化活性，辅因子和催化残基&lt;/li&gt;
&lt;li&gt;亚细胞定位&lt;/li&gt;
&lt;li&gt;蛋白质相互作用&lt;/li&gt;
&lt;li&gt;表达方式&lt;/li&gt;
&lt;li&gt;重要域和站点的位置和角色&lt;/li&gt;
&lt;li&gt;离子，底物和辅因子结合位点&lt;/li&gt;
&lt;li&gt;通过自然遗传变异，RNA编辑，替代剪接，蛋白水解加工和翻译后修饰产生的蛋白质变异形式&lt;/li&gt;
&lt;/ul&gt;
&lt;h5 id=&#34;常用的操作&#34;&gt;&lt;strong&gt;常用的操作&lt;/strong&gt;&lt;/h5&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;Protein%20%E5%8A%9F%E8%83%BD%E6%B3%A8%E9%87%8A.assets/v2-ba9fb31690e924c4bc509b198a3924cc_720w.jpg&#34; alt=&#34;img&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;&amp;lt;1&amp;gt;：这里输入基因名，UniProt ID，或者感兴趣的关键字&lt;/p&gt;
&lt;p&gt;&amp;lt;2&amp;gt;：筛选：&lt;strong&gt;Reviewed&lt;/strong&gt;：存储在Swiss-Prot数据库中经过验证的蛋白数据，&lt;strong&gt;Unreviewed&lt;/strong&gt;：存储在TrEMBL数据库中没有经过验证的蛋白数据&lt;/p&gt;
&lt;p&gt;&amp;lt;3&amp;gt;：筛选某个物种，点击就好切换到该物种&lt;/p&gt;
&lt;p&gt;&amp;lt;4&amp;gt;：通过基因名或蛋白名来筛选&lt;/p&gt;
&lt;p&gt;&amp;lt;5&amp;gt;：依次是Unprot ID，该蛋白数据库命名，蛋白质名，基因名，物种，序列长&lt;/p&gt;
&lt;p&gt;&amp;lt;6&amp;gt;：如果需要Blast来查看某个蛋白有哪些序列相似的蛋白序列，先选中感兴趣蛋白前的方框，点击&lt;code&gt;Blast&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;7&amp;gt;：如果需要多序列比对，先选中感兴趣蛋白前的方框，点击&lt;code&gt;Align&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;8&amp;gt;：如果要下载信息，先选中感兴趣蛋白前的方框，点击&lt;code&gt;Download&lt;/code&gt;下载。这里不选择序列，默认会下载全部序列&lt;/p&gt;
&lt;p&gt;下面以 &lt;code&gt;PO5F1_HUMAN&lt;/code&gt; 为例，下载对应的fasta序列来看看：&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;Protein%20%E5%8A%9F%E8%83%BD%E6%B3%A8%E9%87%8A.assets/v2-4740580ba34951ab5fcd5baf7147b50c_720w.jpg&#34; alt=&#34;img&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;下载到的序列：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sp&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Q01860&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;PO5F1_HUMAN&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;POU&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;domain&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;transcription&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;factor&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OS&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Homo&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sapiens&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;OX&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;9606&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GN&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;POU5F1&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;PE&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SV&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;MAGHLASDFAFSPPPGGGGDGPGGPEPGWVDPRTWLSFQGPPGGPGIGPGVGPGSEVWGI&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;PPCPPPYEFCGGMAYCGPQVGVGLVPQGGLETSQPEGEAGVGVESNSDGASPEPCTVTPG&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;AVKLEKEKLEQNPEESQDIKALQKELEQFAKLLKQKRITLGYTQADVGLTLGVLFGKVFS&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;QTTICRFEALQLSFKNMCKLRPLLQKWVEEADNNENLQEICKAETLVQARKRKRTSIENR&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;VRGNLENLFLQCPKPTLQQISHIAQQLGLEKDVVRVWFCNRRQKGKRSSSDYAQREDFEA&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;n&#34;&gt;AGSPFSGGPVSFPLAPGPHFGTPGYGSPHFTALYSSVPFPEGEAFPPVSVTTLGSPMHSN&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先看 &lt;code&gt;&amp;gt;&lt;/code&gt; 后的注释信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;sp&lt;/strong&gt;：Swiss-Prot数据库的简称，也就是上面说的验证后的蛋白数据库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Q01860&lt;/strong&gt;：UniProt ID号&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PO5F1_HUMAN&lt;/strong&gt;：是UniProt 的登录名&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;POU domain, class 5, transcription factor 1&lt;/strong&gt;：蛋白质名称&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;OS=Homo sapiens&lt;/strong&gt;：OS是Organism简称，Homo sapiens为人的拉丁文分类命名，也就是这是人的蛋白质&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;OX=9606&lt;/strong&gt;：Organism Taxonomy，也就是物种分类数据库Taxonomy ID&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;GN=POU5F1&lt;/strong&gt;：Gene name，基因名为POU5F1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;PE=1&lt;/strong&gt;：Protein Existence，蛋白质可靠性，对应5个数字，数字越小越可靠：&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;1：Experimental evidence at protein level&lt;/li&gt;
&lt;li&gt;2：Experimental evidence at tranlevel&lt;/li&gt;
&lt;li&gt;3：Protein inferred from homology&lt;/li&gt;
&lt;li&gt;4：Protein predicted&lt;/li&gt;
&lt;li&gt;5：Protein uncertain&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;SV=1&lt;/strong&gt;：Sequence Version，序列版本号&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;uniprotkbtrembl&#34;&gt;&lt;strong&gt;UniProtKB/TrEMBL&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;在认识到序列数据的生成速度超过了Swiss-Prot的注释能力时，为了给不在Swiss-Prot中的那些蛋白质提供自动注释，UniProt创建了TrEMBL（翻译的EMBL核苷酸序列数据库）。在三大核酸数据库（EMBL-Bank/GenBank/DDBJ）中注释的编码序列都会被自动翻译并加入该数据库中。它也有来自PDB数据库的序列，以及Ensembl、Refeq和CCDS基因预测的序列。之前提到的PIR组织制作了蛋白质序列数据库（PIR-PSD）。&lt;/p&gt;
&lt;h4 id=&#34;uniparc&#34;&gt;&lt;strong&gt;UniParc&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;UniProt Archive（UniParc）包含来自主要公共可用蛋白质序列数据库的所有蛋白质序列的非冗余数据集。蛋白质可能存在于几个不同的来源数据库中，并且在同一数据库中存在多个副本。 为了避免冗余，UniParc仅将每个唯一序列存储一次。 相同序列被合并，无论它们来自相同还是不同物种。 每个序列都有一个稳定且唯一的标识符（UPI），从而可以从不同的来源数据库中识别相同的蛋白质。&lt;/p&gt;
&lt;p&gt;UniParc仅包含蛋白质序列，没有注释。 UniParc条目中的数据库交叉引用允许从源数据库检索有关该蛋白质的更多信息。 当源数据库中的序列发生更改时，UniParc将跟踪这些更改，并记录所有更改的历史记录。&lt;/p&gt;
&lt;h4 id=&#34;uniref&#34;&gt;&lt;strong&gt;UniRef&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;UniProt Reference Clusters（UniRef）：聚类序列可显著减小数据库大小，从而加快序列搜索的速度。用于计算的蛋白质序列来自UniProtKB和部分UniParc记录的序列。UniRef100序列将相同的序列和序列片段（来自任何生物）合并到一个UniRef条目中，用于显示代表性蛋白质的序列。 使用CD-HIT算法对UniRef100序列进行聚类，并构建UniRef90和UniRef50。UniRef90和UniRef50分别代表每个簇由与最长序列分别具有至少90％或50％序列同一性的序列组成。&lt;/p&gt;
&lt;h3 id=&#34;cog直系同源蛋白数据库&#34;&gt;COG直系同源蛋白数据库：&lt;/h3&gt;
&lt;p&gt;COG (蛋白质直系同源簇) 数据库是 NCBI 开发的用于同源蛋白注释的数据库，是将细菌、藻类和真核生物的21个完整基因组的编码蛋白，根据系统进化关系分类构建而成。通过鉴定蛋白与数据库的比对，可以很好的预测蛋白质的功能。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -c ftp://ftp.ncbi.nih.gov/pub/COG/COG2014/data/* 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;fun2003-2014.tab 保存了COG的分类信息，将所有的COG的功能分为了以下26个类别，每个类别用一个字母表示&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cognames2003-2014.tab 文件保存了COG的详细信息，包括编号，对应的分类，功能描述等信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;cog2003-2014.csv 文件保存了蛋白和COG的对应关系&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;prot2003-2014.fa.gz 保存了fasta格式的蛋白序列和注释信息，直接对蛋白序列文件构建索引blast比对。示例如下&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&amp;gt;gi&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;103485499&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;ref&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt;YP_615060.1&lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; chromosomal replication initiation protein &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;Sphingopyxis alaskensis RB2256&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;MSGDAAALWPRVAEGLRRDLGARTFDHWLKPVRFADYCALSGVVTLETASRFSANWINERFGDRLELAWRQQLPAVRSVS VRGGVAATERAATLASVPLPTFDAPAAPAANPALLGFDP
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;RLSFDRFVVARSNILAANAARRMAMVERPQFNPLYLCSGTG QGKTHLLQAIAQDYAAAHPTATIILMSAEKFMLEFVGAMRGGDMMAFKARLRAADLLLLDDLQFVIGKNSTQEELLHT
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ID DLMTAGKRLVVTADRPPAMLDGVEARLLSRLSGGLVADIEAPEDDLRERIIRQRLAAMPMVEVPDDVIAWLVKHFTRNIR ELEGALNKLLAYAALTGARIDLMLAEDRLAENVRSA
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;RPRITIDEIQRAVCAHYRLDRSDMSSKRRVRAVARPRQVAMYLA KELTPRSYPEIGRRFGGRDHSTVIHAVRTVEALRVADSELDAEIAAIRRSLNS 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;kog数据库&#34;&gt;KOG数据库：&lt;/h3&gt;
&lt;p&gt;“KOG”是Clusters of orthologous groups for eukaryotic complete genomes（真核生物蛋白相邻类的聚簇）的缩写。构成每个KOG的蛋白都是被假定为来自于一个祖先蛋白，并且因此或者是orthologs或者是paralogs。Orthologs是指来自于不同物种的由垂直家系（物种形成）进化而来的蛋白，并且典型的保留与原始蛋白有相同的功能。Paralogs是那些在一定物种中的来源于基因复制的蛋白，可能会进化出新的与原来有关的功能。数据库链接：&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//links.jianshu.com/go%3Fto%3Dftp%3A%2F%2Fftp.ncbi.nih.gov%2Fpub%2FCOG%2FKOG%2Fkyva&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ftp://ftp.ncbi.nih.gov/pub/COG/KOG/kyva&lt;/a&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -c ftp://ftp.ncbi.nih.gov/pub/COG/* 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;eggnog数据库&#34;&gt;EggNOG数据库：&lt;/h3&gt;
&lt;p&gt;EggNOG数据库是直源同系蛋白分组比对（evolutionary genealogy of genes: Non-supervised Orthologous Groups）数据库，由EMBL创建并维护，是对NCBI的COG数据库进行拓展，提供了不同分类水平蛋白的直系同源分组（Orthologous Groups，OG），包括真核物种、原核物种及病毒的数据信息。它扩展了COG数据库的分类方法，采用无监督聚类算法在全基因组范围内推导基因功能，更适用于谱系特征基因的分析。
&lt;strong&gt;新版本EggNOG 5.0的主页地址：&lt;/strong&gt;&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//links.jianshu.com/go%3Fto%3Dhttp%3A%2F%2Feggnog5.embl.de%2F%23%2Fapp%2Fhome&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://eggnog5.embl.de/#/app/home&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新版本另一个改进是不再使用物种名称缩写，而是使用更加规范的NCBI Taxid来进行物种分类，对应的数据下载地址如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;http://eggnog5.embl.de/download/eggnog_5.0/per_tax_level/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下载数据：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -c http://eggnog5.embl.de/download/eggnog_5.0/e5.proteomes.faa
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -c http://eggnog5.embl.de/download/eggnog_5.0/e5.taxid_info.tsv 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -c http://eggnog5.embl.de/download/eggnog_5.0/e5.og_annotations.tsv 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;其中e5.proteomes.faa为所有的蛋白组序列，e5.taxid_info.tsv为Taxid对应的物种名称以及完整的谱系信息，e5.og_annotations.tsv为所有的NOG group信息，其第一列为Taxid，第二列为NOG groups，第三列为COG归属，第四列为Function。
但现在我们还不能完成注释，必须需要蛋白序列id与NOG group的对应信息，这个信息在per_tax_level下不同taxonomy level的members.tsv文件中，我们将下载好的所有物种的members.tsv文件合并。
members.tsv有五列（如下所示），其中第一列为Taxid，因为我们下载的是细菌bacteria所以第一列均为2，第二列为NOG group，第三列为该NOG group所包含的蛋白序列数目，第四列为该NOG group所包含的物种数目，第五列为该NOG group所包含的蛋白序列id，第六列为该NOG group所包含的物种的Taxid。结合该members.tsv文件与前面的e5.og_annotations.tsv，就可知道比对上的蛋白序列所属的NOG group、COG categories、Function。&lt;/p&gt;
&lt;h3 id=&#34;pfam数据库&#34;&gt;Pfam数据库：&lt;/h3&gt;
&lt;p&gt;Pfam数据库是蛋白质家族的数据库，根据多序列比对结果和隐马尔可夫模型，将蛋白质分为不同的家族。网址如下： &lt;a href=&#34;https://link.zhihu.com/?target=https%3A//links.jianshu.com/go%3Fto%3Dhttp%3A%2F%2Fpfam.xfam.org%2F&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://pfam.xfam.org/&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装HMMer&lt;/li&gt;
&lt;li&gt;从&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//links.jianshu.com/go%3Fto%3Dftp%3A%2F%2Fftp.ebi.ac.uk%2Fpub%2Fdatabases%2FPfam%2Freleases%2F&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ftp://ftp.ebi.ac.uk/pub/databases/Pfam/releases/&lt;/a&gt;下载pfam数据库Pfam-A.hmm&lt;/li&gt;
&lt;li&gt;得到 PFAM 数据库的 HMM 文件。 HMM 文件是文本文件，需要将其变成二进制格式，以加快运算速度，同时进行压缩，并建立成索引数据库。 命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hmmpress Pfam-A.hmm  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;使用 hmmscan 进行 Pfam 注释示例：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hmmscan -o out.txt --tblout out.tbl --noali -E 1e-5 Pfam-A.hmm file.fasta 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;附 hmmscan [-options]几个主要选项含义&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-h 显示帮助信息 -o FILE 将结果输出到指定的文件中。默认是输出到标准输出。
&amp;ndash;tblout FILE 将蛋白质家族的结果以表格形式输出到指定的文件中。默认不输出该文件。
&amp;ndash;domtblout FILE 将蛋白结构域的比对结果以表格形式输出到指定的文件中。默认不输出该文件。该表格中包含query序列起始结束位点与目标序列起始结束位点的匹配信息。
&amp;ndash;acc 在输出结果中包含 PF 的编号，默认是蛋白质家族的名称。
&amp;ndash;noali 在输出结果中不包含比对信息。输出文件的大小则会更小。
-E FLOAT default:10.0 设定 E_value 阈值，推荐设置为 1e-5 。
-T FLOAT 设定 Score 阈值。
&amp;ndash;domE FLOAT default:10.0 设定 E_value 阈值。该参数和 -E 参数类似，不过是 domain 比对设定的值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;string数据库&#34;&gt;String数据库：&lt;/h3&gt;
&lt;p&gt;STRING数据库（&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//links.jianshu.com/go%3Fto%3Dhttps%3A%2F%2Fstring-db.org%2F&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://string-db.org/&lt;/a&gt;）是一个搜寻已知蛋白质之间和预测蛋白质之间相互作用关系的系统。这种作用关系既可以是蛋白质之间的物理作用，也可以是间接的功能相关性。它基于染色体临近、系统进化谱、基因融合和基因芯片数据等生物学信息来计算基因或者蛋白的共表达。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -c https://stringdb-static.org/download/protein.links.v11.0.txt.gz #protein network data (scored links between proteins) 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -c https://stringdb-static.org/download/protein.actions.v11.0.txt.gz #interaction types for protein links  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;perl data_extract_by_ids.pl -idfile ../Nr/Archaea.list -destfile protein.actions.v11.0.change.txt -out Archaea.actions.v11.0.change.txt &amp;amp; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;perl data_extract_by_ids.pl -idfile ../Nr/Archaea.list -destfile protein.links.v11.0.change.txt -out Archaea.links.v11.0.txt &amp;amp; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;perl data_extract_by_ids.pl -idfile ../Nr/Bacteria.list -destfile protein.actions.v11.0.change.txt -out Bacteria.actions.v11.0.change.txt &amp;amp;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;perl data_extract_by_ids.pl -idfile ../Nr/Bacteria.list -destfile protein.links.v11.0.change.txt -out Bacteria.links.v11.0.txt &amp;amp; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;perl data_extract_by_ids.pl -idfile ../Nr/Eukaryota.list -destfile protein.actions.v11.0.change.txt -out Eukaryota.actions.v11.0.change.txt 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;perl data_extract_by_ids.pl -idfile ../Nr/Eukaryota.list -destfile protein.links.v11.0.change.txt -out Eukaryota.links.v11.0.txt &amp;amp; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;10.1. 动物转录因子数据AnimalTFDB3.0简介&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;动物转录因子数据库AnimalTFDB3.0]对97个动物基因组的转录因子（Transcription Factor）和转录辅助因子（Transcription cofactor）进行了归纳整理。基于DNA结合结构域，将动物转录因子分成了73个基因家族，将转录辅助因子分成了83个基因家族。此外，动物转录因子分为六大类（Basic Domain Group、Zinc-Coordinating Group、Beta-Scaffold Factors、Helix-turn-helix、Other Alpha-Helix Group和Unclassified Structure），动物转录辅助因子也分为六大类（Co-activator/repressors、Chromatin Remodeling Factors、General Cofactors、Histone-modifying Enzymes、Cell Cycle和Other Cofactors）。
动物转录因子数据库AnimalTFDB3.0提供了[网页工具] 进行转录因子分析。该网页工具一次仅支持上传不超过1000条蛋白序列，不利于动物全基因组的转录因子分析。以下讲解下载AnimalTFDB3.0数据库FASTA文件，并自行编写程序进行转录因子和转录辅助因子注释。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载14个hmm文件并合并&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget -c http://bioinfo.life.hust.edu.cn/static/AnimalTFDB3/download/hmm/* 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;下载97个物种的蛋白序列、转录因子、转录辅助因子、转录辅助因子序列&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget http://bioinfo.life.hust.edu.cn/static/AnimalTFDB3/download/Ailuropoda_melanoleuca_TF_protein.fa 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget http://bioinfo.life.hust.edu.cn/static/AnimalTFDB3/download/Ailuropoda_melanoleuca_TF 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget http://bioinfo.life.hust.edu.cn/static/AnimalTFDB3/download/Ailuropoda_melanoleuca_TF_cofactors 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget http://bioinfo.life.hust.edu.cn/static/AnimalTFDB3/download/Ailuropoda_melanoleuca_Cof_protein.fa  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;参考：&lt;/strong&gt;[http://www.chenlianfu.com/?p=2759]&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10.2. 植物转录因子数据AnimalTFDB3.0简介&lt;/strong&gt;
PlnTFDB [http://plntfdb.bio.uni-potsdam.de/v3.0/] 是一个植物转录因子数据库，该数据库收录了大部分植物模式物种，包括拟南芥，水稻等20个物种的84个转录因子家族，包含28193 protein models, 26184 distinct protein sequences。它支持在线blast进行比对，也可以将数据下载后进行本地blast。
&lt;strong&gt;分析工具：iTAK&lt;/strong&gt; :[http://itak.feilab.net/cgi-bin/itak/index.cgi]&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;wget ftp://itak.feilab.net/pub/program/itak/old/iTAK-1.7.tar.gz 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;软件内部内置了PlantTFDB的数据库数据，可以直接用于预测植物转录因子，使用方法非常简单，只需要输入您需要鉴定的蛋白序列fasta格式即可。&lt;/p&gt;
&lt;p&gt;其中classification.txt就是我们得到的植物转录因子预测结果：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;alignment.txt：输入序列和数据库比对结果&lt;/li&gt;
&lt;li&gt;classification.txt：输入序列鉴定结果，ID 1：输入序列，ID 2：Family 鉴定的家族名称&lt;/li&gt;
&lt;li&gt;Type Family 类型，包含 TF，TR，PK TF: transcription factors TR: transcription regulator PK: protein kinases.&lt;/li&gt;
&lt;li&gt;Sequence.fasta：输入序列比对上家族的氨基酸序列&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;10.3. 真菌转录因子数据库Fungal TFDB简介&lt;/strong&gt;
真菌转录因子数据库Fungal TFDB1.2([http://ftfd.snu.ac.kr/index.php?a=view])
对249个真菌（包含6个卵菌）基因组的转录因子和228个非真菌系的转录因子进行了归纳整理。基于转录因子家族分类，共获得61个家族，包含18563个真菌转录因子序列。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python 解析go的obo文件</title>
      <link>https://jianzhnie.github.io/post/python-%E8%A7%A3%E6%9E%90go%E7%9A%84obo%E6%96%87%E4%BB%B6/</link>
      <pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://jianzhnie.github.io/post/python-%E8%A7%A3%E6%9E%90go%E7%9A%84obo%E6%96%87%E4%BB%B6/</guid>
      <description>&lt;h3 id=&#34;go的obo文件解析python代码&#34;&gt;GO的obo文件解析Python代码&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;介绍：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在现在的组学研究中几乎离不开GO分析，那么GO是干什么的呢，GO的诞生主要目的是来归类统一生物学方言的（不同的生物学数据库可能会使用不同的术语），它是一个有向无环图（DAG）本体,主要形式是一term标记，每个GO term代表一种功能描述，都属于ontology.&lt;/p&gt;
&lt;p&gt;而GO总共分成三个ontology:molecular function, cellular component 和biological process；&lt;/p&gt;
&lt;p&gt;在GO中GO term之间存在多种关系，常见的主要是 is_a 和 part_o f和两种关系，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;is_a：表示包含关系，如图中黑色箭头，需要强调的是“完全包含”；&lt;/li&gt;
&lt;li&gt;Part_of：表示一部分，如图蓝色箭头部分，简单的来说是A part_of_B意味着如果A出现，那么它就肯定是B的一部分或组成部分，但A不一定总会出现。比如叶绿体 part_of 细胞，叶绿体肯定是细胞的一部分，但有的细胞没有叶绿体。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://www.shengxin.ren/image/show/attachments-2017-05-gTNS5jPL592d3f1a5bf07.&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://www.shengxin.ren/image/show/attachments-2017-05-gTNS5jPL592d3f1a5bf07.&#34; alt=&#34;attachments-2017-05-gTNS5jPL592d3f1a5bf0&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/a&gt;&lt;strong&gt;使用：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;了解GO之后，怎么使用它是一个永远的话题，比如手头有一个基因序列但不知道它的功能，那么经常的做法是会进行GO注释，从 GO注释中来推断这个基因序列的功能，这篇文章主要是来分享一下对于GO的obo文件的解析的，obo文件是用来存储所有GO term关系的文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#encoding:utf-8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;Created on 2017.5.29
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;@author: zhura
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;GOBase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alt_ids&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allParents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;ObOs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;object&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parseObO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;parseObO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;path&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;lines&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;readlines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;close&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_goTxt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lines&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rstrip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;strip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;_goTxt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parseGO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_goTxt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;_goTxt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;[Term]&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;True&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;parseGO&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_goText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_namespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_is_as&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_alt_ids&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_goText&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;id:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GO&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GO&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;name:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;_name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rstrip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lstrip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;namespace:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;_namespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rstrip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lstrip&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;alt_id:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;_alt_ids&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GO&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GO&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;is_a:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;relationship:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;_is_as&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GO&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_txt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GO&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;has_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GOBase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_name&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;namespace&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_namespace&lt;/span&gt;   
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parseParent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_is_as&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;alt_ids&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_alt_ids&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_alt_ids&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_alt&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_alt_ids&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_alt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                               
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;parseParent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;is_as&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;__parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;isa&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;is_as&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;has_key&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;cGo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;GOBase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cGo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;__parent&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;append&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;isa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;__parent&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_min&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;elif&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;n&#34;&gt;lev&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_min&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;_min&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lev&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_min&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;getAllParent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_prs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_id&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;not&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allParents&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allParents&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;is&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;None&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;or&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allParents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_prs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allParents&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;g&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;parent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;ap&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getAllParent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;g&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;            &lt;span class=&#34;n&#34;&gt;_prs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;extend&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ap&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allParents&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_prs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_go&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;allParents&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;obo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;D:/bgDB/go-basic.obo.txt&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;ob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ObOs&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;obo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getAllParent&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GO:0004322&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GO:0004322&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ob&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;getLevel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;GO:0003824&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>微生物知识基础</title>
      <link>https://jianzhnie.github.io/post/%E5%BE%AE%E7%94%9F%E7%89%A9/</link>
      <pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://jianzhnie.github.io/post/%E5%BE%AE%E7%94%9F%E7%89%A9/</guid>
      <description>&lt;p&gt;肠道菌群，作为寄居在人体肠道内微生物群落的总称，是近年来微生物学、医学、基因学等领域最引人关注的研究焦点之一。 &lt;/p&gt;
&lt;p&gt;近年来的研究逐渐揭示了肠道菌群的构成、数量、如何进入人体、如何辅助消化、如何影响肠道发育，以及肠道菌群失衡如何影响整体健康。 &lt;/p&gt;
&lt;p&gt;但肠道菌群如此庞大，与人体的交互关系如此复杂，关于肠道菌群仍有诸多悬而未解的难题。无外乎很多科学家将其称为人体的另一个器官，甚至“另一个你”。&lt;/p&gt;
&lt;p&gt;人类的胃肠内有数万亿个微生物，包括细菌、真菌和病毒。它们大多分布在大肠中，数量大致与全身的细胞数相当。在人体肠道细菌中，只有10%到20%的细菌是与他人相同的。&lt;/p&gt;
&lt;img title=&#34;&#34; src=&#34;http://www.im.cas.cn/kxcb/wswdjt/201510/W020151010512858359438.jpg&#34; alt=&#34;&#34; width=&#34;614&#34;&gt;
&lt;p&gt;左上）双歧杆菌，（右上）乳酸杆菌，（左下）肠球菌，（右下）大肠杆菌&lt;/p&gt;
&lt;h3 id=&#34;肠道菌群是什么&#34;&gt;&lt;strong&gt;肠道菌群是什么？&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;这里有三个关键词，肠道、菌、群。 &lt;/p&gt;
&lt;p&gt;研究微生物的科学家，给了一个通俗易懂的定义——生存在人的肠道里的大量细菌构成的集体，就叫做肠道菌群。 &lt;/p&gt;
&lt;p&gt;这家伙并不是人与生俱来的。胎儿在子宫里是处于无菌状态的，但胎儿出生后，伴随第一口呼吸、第一口乳液、第一嘴辅食，肠道菌群的始祖们，也随着食物、空气、水进入肠道并安营扎寨，不断壮大队伍，扩充地盘，最终形成稳定的菌群构成。&lt;/p&gt;
&lt;h3 id=&#34;肠道菌群有什么&#34;&gt;&lt;strong&gt;肠道菌群有什么？&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;前面说了，肠道菌群构成复杂，细菌种类繁多，但还是能划分为三种类型。 &lt;/p&gt;
&lt;p&gt;第一种是共生菌群，主要有拟杆菌、梭菌、双歧杆菌、乳酸杆菌。这几个名很熟悉吧，现在各类产品中铺天盖地的益生菌，说的就是后两者，有很多益生元或益生素就是用于补充或者刺激双歧杆菌的生长。 &lt;/p&gt;
&lt;p&gt;这些细菌势力最为庞大，占到了肠道菌群的99%以上，跟人形成良好的合作关系，辅助消化多种食物，并保护我们的肠道。 &lt;/p&gt;
&lt;p&gt;第二种是条件致病菌群，主要有肠球菌、肠杆菌等。这些家伙数量不多，但属于肠道里的不稳定因素。肠道健康时，共生菌群占压倒性优势，条件致病菌群就很安分；但要是共生菌群被破坏了，这些家伙就会引发多种肠道疾病。 &lt;/p&gt;
&lt;p&gt;第三种是致病菌群，比如沙门氏菌、致病大肠杆菌等。它们是健康的破坏者，本不属于肠道，但一旦误食进入肠道，就会兴风作浪，导致腹泻、食物中毒等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;肠道菌群都干些什么？&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;肠道菌群，或者说共生菌群，不是住在你的肠道白吃白喝的，它与你的健康休戚相关。 &lt;/p&gt;
&lt;p&gt;首先，也是最重要的，帮你吃饭。 &lt;/p&gt;
&lt;p&gt;人是所有生物中饮食最复杂的，肉、菜、谷物，无所不食。但吃是一码事，消化吸收是另一码事。人最主要的消化器官就是肠道，但面对如此繁多的食物，纵使肠道有三头六臂，也处理不了这么繁重的工作。 &lt;/p&gt;
&lt;p&gt;于是在人类漫长的进化史中，肠道请来了帮手——共生菌群。肠道为它们提供天然的厌氧环境作为住所；后者特别擅长分解复杂纤维和多糖，把得到的葡萄糖、维生素、脂肪、微量元素，作为房租交给肠道，供人体吸收。两者各取所取，有饭一起吃，有钱一起赚。 &lt;/p&gt;
&lt;p&gt;其次，保护你的健康。 &lt;/p&gt;
&lt;p&gt;一方面，大量的菌群黏附在肠壁上，为肠道穿上了一层天然的铠甲，避免肠壁与有害物质直接接触。另一方面，共生菌群会与肠道的免疫系统形成互动，刺激后者的发育，使肠道应对致病微生物的“反导系统”更加强大。 &lt;/p&gt;
&lt;p&gt;此外，共生菌群还会直接上阵，帮助消灭致病菌。 &lt;/p&gt;
&lt;p&gt;因为共生菌群与致病菌群都以肠道为生存环境，致病菌的入侵，直接侵占了共生菌群的地盘。面对这种情形，占绝对优势的共生菌自然不会答应，第一时间就会通过“菌数”优势，压制致病菌势力，在保护自己家园的同时，也保护人体的健康。 &lt;/p&gt;
&lt;p&gt;再者，调节你的生理。 &lt;/p&gt;
&lt;p&gt;正常的肠道菌群，为了改善自己的居住环境，也就是你的肠道，会将分解的短链脂肪酸滋养肠壁细胞，促进肠壁细胞的生长和更替，还能促进肠壁分泌更多的消化酶。 &lt;/p&gt;
&lt;p&gt;同时，它们还能调节肠粘膜的生长，让受损的肠粘膜更快的得到修复——自家房子漏雨的还不赶快修呀。除此之外，肠道菌群能产生类胡萝卜素类物质，降低动脉硬化和中风的风险；还能通过跟淋巴系统谈判，降低对食物的过敏反应。更为神奇的是，最新的研究成果表明，肠道菌群能根据对它对食物的喜好，调节你的生理和心理状态。&lt;/p&gt;
&lt;p&gt;通过&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3957428/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;饮食改变&lt;/a&gt;、药物、甚至&lt;a href=&#34;https://www.nytimes.com/2018/01/03/well/move/exercise-microbiome-health-weight-gut-bacteria.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;锻炼&lt;/a&gt;，人类的微生物组可能很快发生改变。因此，通过仔细检查肠道，我们能够发现疾病出现和扩散的迹象，这对于改善我们的健康状况，甚至延长寿命都至关重要。&lt;/p&gt;
&lt;p&gt;借助科学研究领域的人工智能和机器学习，科学家尽可能多地采集人的微生物学特征，以了解发生疾病变化的表征。研究者也可通过操纵生物群系，找到抵御、甚至治愈疾病的方法。&lt;/p&gt;
&lt;p&gt;如果我们认为每个微生物组都不同，则可根据个体基因突变和生物组成对症下药。据此，研究者正在从简单的诊断向预防医学和个人医学转变。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;预测性：&lt;/strong&gt; 研究认为，在发病或病情发展之前的几个月、甚至是几年内，人类的微生物组都有可能发生变化。但饮食、压力、锻炼和其他因素也可以改变微生物组。医学科学家正在努力了解哪些变化是由于生活方式的不同，又有哪些变化表示疾病的出现。检测健康人体的微生物组，提供基线指标，借此分析这段时间内的变化。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;预防性：&lt;/strong&gt; 研究者正在寻找填充人体系统及其活动的微生物类型，以找到抵御糖尿病、癌症和痴呆症等疾病的建议。研究者希望将基因数据与微生物组数据相结合，以提供预防性护理。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;个性化：&lt;/strong&gt; 直至今日，基于人体独特生物学特点的“个性化”或“精确”治疗主要依赖家族史和 DNA 分析。研究者希望通过微生物组包含的数据做出&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5824491/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;更为准确&lt;/a&gt;的治疗选择。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在每个人的生物群系中检测数百万亿微生物，分析速度可能比预期速度慢。通过改进后的、高级计算机系统（采用 Micron 美光内存设备）支持的人工智能技术，研究者可在几分钟内完成数年的人力工作（人力工作也并不一定能成功完成）。&lt;/p&gt;
&lt;p&gt;为了使该样本分析更有意义，科学家需要数据库的辅助。美国国家卫生研究院的“&lt;a href=&#34;https://www.mesotheliomahelp.org/nih-all-of-us-program-may-guide-research-for-new-treatments-for-mesothelioma/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;我们所有人&lt;/a&gt;”计划旨在采集 100 多万人的数据，包括微生物组采样数据，以有助于更准确的医疗用途。美国国家卫生研究院的“&lt;a href=&#34;https://commonfund.nih.gov/hmp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;人类微生物组计划&lt;/a&gt;”（已停止）开展了许多关于肠道菌群对人类各方面健康作用的研究。目前很多其他项目正在进行中，希望可以实现以下目标：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;改善免疫系统。&lt;/strong&gt; 将微生物组看作免疫系统调节剂的这一观点已被广泛接受。从婴儿时期开始，肠道中的细菌就开始教我们的免疫系统“如何好好表现”（引用 &lt;a href=&#34;https://medicalxpress.com/news/2018-03-gut-bacteria-essential-healthy-immune.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ScienceNordic 中的一篇文章&lt;/a&gt;）。这些生物也会影响消化道和其他器官的炎症情况。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;预防霍乱。&lt;/strong&gt; 来自杜克大学、麻省综合医院和孟加拉国达卡国际腹泻病研究中心的研究者正在通过&lt;a href=&#34;https://academic.oup.com/jid/article-abstract/218/4/645/4969495?redirectedFrom=fulltext&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;机器学习算法&lt;/a&gt;检测消化系统中的细菌群落活动模式 - 人类通过肉眼基本无法看到这些活动。由于并非所有接触霍乱的人都患上腹泻疾病，因此人工智能可以帮助研究人员了解其被研究者是否有风险及其原因。其还有助于疫苗的开发。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;药物相互作用。&lt;/strong&gt; 根据&lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pubmed/29704918&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;美国国家医学图书馆摘要&lt;/a&gt;，我们认为微生物组的组成影响药物治疗的反应，以及某些药物的代谢程度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;老化。&lt;/strong&gt; 微生物组对健康老化的作用是加州大学圣地亚哥分校和 IBM 研究院的健康生活人工智能中心的研究重点之一。该中心研究遗传学、环境因素、日常生活习惯和人类微生物组对老年人认知能力的影响。现已证实，帕金森病和其他老龄疾病都与微生物组有关。该中心采用人工智能技术，筛选并分析抽样中提供的大量数据。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;肠道微生物组的应用前景&#34;&gt;肠道微生物组的应用前景&lt;/h3&gt;
&lt;p&gt;最近的一项创新的研究性疗法是将粪便微生物群移植，并已经在临床试验中进行了测试，非常具有治疗前景。 在过去的5年里，CAS 内容合集每年收录约1000余篇与粪便移植相关的文献。 例如，据报道，粪便微生物群移植能够解决 80-90% 由对抗生素无反应的复发性艰难梭菌引起的感染。 粪便微生物群移植作为一系列疾病的潜在治疗手段急待探究，其临床试验的独特作用也正被越来越多地研究。 &lt;/p&gt;
&lt;p&gt;目前，通过胃肠道微生物群调节肠脑轴的研究是一门新兴的创新前沿科学。 大部分可用数据是基于基础科学或动物模型，可能无法适用于有效的人类干预。 因此，特定的益生元化合物和益生菌的个体化处方，代表了理想的、个性化的营养方式和生活方式。 人们仍然对个体化处方充满希望。正在进行的进一步确定微生物组的功能和宿主-微生物的互作机制的努力，将使人们更好地了解微生物组在健康和疾病中的作用。&lt;/p&gt;
&lt;h3 id=&#34;与致癌菌斗争到底&#34;&gt;与致癌菌斗争到底&lt;/h3&gt;
&lt;p&gt;① 肠道微生物可产生破坏DNA的毒素以及致癌物质，引起促癌炎症反应，使肿瘤对化疗药物产生抗性，并抑制人体的抗癌免疫反应；② 常见的致癌菌有：引起胃癌的幽门螺旋杆菌，引起肠癌的特定脆弱拟杆菌和大肠杆菌菌株以及具核梭杆菌；③ 可发展针对特定致癌菌的药物、疫苗或噬菌体，在杀灭致癌菌的同时不影响有益菌；④ 粪菌移植安全性尚存疑，与直接采用捐赠者粪菌相比，移植经过设计的菌群更安全；⑤ 微生物疗法也需针对特定肿瘤类型进行定制。&lt;/p&gt;
&lt;h3 id=&#34;工程菌有望成为新的活体疗法&#34;&gt;工程菌有望成为新的活体疗法&lt;/h3&gt;
&lt;p&gt;① 利用合成生物学，单菌的定制改造已经初步实现，现在研究者希望实现工程菌多功能化，尤其是其检测性及对内环境的监测性；② 由工程菌和天然菌组成的关键菌群群落的定制和移植，是一种可以实现的、更好的方式，其困难在于菌落间的相互作用及其功能实现；③ 基于群体感应原理，工程菌的应用需要结合合成生物学与合成生态学观点；④ 鉴于肠道菌群的复杂性和宿主特异性，且“健康”菌群的定义尚不明确，工程菌的研究面临着极大挑战与机遇。&lt;/p&gt;
&lt;h3 id=&#34;靶向菌群的饮食干预没那么简单&#34;&gt;靶向菌群的饮食干预，没那么简单&lt;/h3&gt;
&lt;p&gt;① 不同菌群群落对健康的影响尚不确定：以短链脂肪酸（SCFA）为例，虽然膳食介导菌群增加SCFA产生，但是其与菌群及宿主的复杂相互作用并不清楚；② 菌群或代谢物除了受食物中宏量营养素影响外，还受其他成分、加工方式等影响，且其对健康的影响程度未知；③ 目前，有两种方式可以利用菌群数据：生物标志物的发现和靶向菌群的筛选，但是其应用也要结合其他方面的研究数据；④ 鉴于特定膳食难以长期依附，以菌群为靶点的药物应是未来研究方向。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2020 岁岁年年</title>
      <link>https://jianzhnie.github.io/post/2020-%E5%B2%81%E5%B2%81%E5%B9%B4%E5%B9%B4/</link>
      <pubDate>Tue, 11 Feb 2020 00:00:00 +0000</pubDate>
      <guid>https://jianzhnie.github.io/post/2020-%E5%B2%81%E5%B2%81%E5%B9%B4%E5%B9%B4/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;当我们一边走路一边纪念&lt;/p&gt;
&lt;p&gt;但一不小心&lt;/p&gt;
&lt;p&gt;又把一天走成一年&lt;/p&gt;
&lt;p&gt;陪时光荡秋千&lt;/p&gt;
&lt;p&gt;每受一次伤学一点&lt;/p&gt;
&lt;p&gt;很久以后&lt;/p&gt;
&lt;p&gt;再去怀念&lt;/p&gt;
&lt;p&gt;让我们一边寻觅一边亏欠&lt;/p&gt;
&lt;p&gt;拿起初的心&lt;/p&gt;
&lt;p&gt;再把一天走成一年&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;2020-岁岁年年&#34;&gt;2020 岁岁年年&lt;/h2&gt;
&lt;p&gt;上面的歌词来自于孙燕姿的《天天年年》，歌词写得其实就是人生，有一天发现自己不再年轻，也终于活成了小时候期待的样子，理智，成熟。可是不快乐，最怀念的还是当初那个勇敢去爱，去闯，无忧无虑的少年。当我一年年长大，上学、恋爱、工作，直到有一天，发现他的梦越来越少了。&lt;/p&gt;
&lt;p&gt;歌唱着时光的逝去，一晃，到了2020年的大年三十，在这极为特殊的一年，我想应该为过去的一年留下些什么。于是我打算给自己写个年终总结。&lt;/p&gt;
&lt;p&gt;2020年初，武汉爆发疫情，作为距离武汉不足两百公里的边陲小城，从武汉返程的大学生、打工人有数万人之多，因此我们也理所当然成为重风险地区被封城了。由于不能返程，这竟成为我近六年来在家度过的最长的一个假期，不知是福还是祸。&lt;/p&gt;
&lt;p&gt;封城令直到三月初才开始陆续放行，返回深圳之后，除了每天往返公司和家，几乎没去过其他地方。在家隔离的日子仿佛扭曲了时间，刚开始的那段时间，我会每天晚上做好饭，然后第二天带到公司用微波炉加热。坚持了不到一个月之后便放弃了，一方面是觉得太过麻烦，另一方面感觉冷藏之后再次加热的食物吃起来没了味道。但是，每天的早餐我还是坚持自己在家吃，那段时间，我还经常给每天的食物拍照，偶尔发发朋友圈，算是很有趣的记录，后来拍照记录也被我放弃了，因为我发现手机里除了食物几乎没有别的。这一年仿佛过得非常快，但是似乎又很慢— — 各种大事件一件接着一件，每天更新的新冠死亡人数以万记，好像到了世界末日。&lt;/p&gt;
&lt;p&gt;一晃到了年底，原本不打算回家过年，打电话问我爸、我弟，都说过年不回去。最后，年夜饭桌上，我们全家人还是团团圆圆地坐在一起。或许是觉得过年家里只有我妈一个人太过冷清，于是乎，我们还是不约而同地选择了回家。&lt;/p&gt;
&lt;p&gt;正如现在，我终于腾出手来开始写年终总结，于是乎开始在脑海里搜索2020一整年的 Spark.&lt;/p&gt;
&lt;h3 id=&#34;工作&#34;&gt;工作：&lt;/h3&gt;
&lt;p&gt;对于我来说，2020年最大的收获应该是来自工作。&lt;/p&gt;
&lt;p&gt;年初疫情严重的时候，困居在家不能返程，公司给我办理了入职手续，安排我在家远程办公。刚刚入职，又是远程办公，和同事们都没见过面，但是小伙伴都非常积极主动的帮我解决问题，我很快融入了集体。也是因为远程办公的原因，工作效率上和现场办公差了不少，而且由于家里太冷，我通常是坐在被窝里面办公，这样在没有办公室、会议室、食堂这些基本活动之后，我基本上是一整天坐在电脑前了，疲劳程度远远大于在公司办公。而且由于和美国老板们的时间差，我们上班的时间也提前了。工作的第二周，我们每天的例会提前到早上8点，这样，我的办公时间就从早上8点一直持续到晚上11点，疲劳程度可想而知。&lt;/p&gt;
&lt;p&gt;三月返深之后，开始回到 office 工作，终于见到了团队小伙伴，工作各方面也步入正轨。部门领导给了我的工作极大的自由度，这让我有时间按照自己方式规划整个流程并以很高的效率完成每一项任务。与此同时，为了保持工作状态，上班时间我都是尽量把工作做完，然后早点回家，有时回家做个简餐，但更多时候回家锻炼身体。&lt;/p&gt;
&lt;p&gt;整个2020年，虽说没有花太多时间读论文，研究新的算法，但是掌握了很多提升工作效率的工具，也算是收获满满。&lt;/p&gt;
&lt;h3 id=&#34;生活&#34;&gt;生活：&lt;/h3&gt;
&lt;p&gt;2020年疫情给我的生活带来的影响是巨大的。虽然我知道自己还算蛮宅得住的，但是也对自己的宅能力有了新的认识。虽然说宅起来心里上并没有太大的不适，主要是焦虑感，在每个周末结束的时候，我总会在心里责怪自己自控力太差，周末的时间都被我刷剧、看无聊视频给浪费掉了，不如花在锻炼身体和做其他更有意义的事情。&lt;/p&gt;
&lt;p&gt;今年睡眠方面有了很大改善，一个原因是我经常在下班之后去健身房或者在家锻炼一会儿，这样在我入睡之前身体已经很疲劳了，另一个是我一直保持的习惯：在睡觉前把手机调整为飞行模式并放在距离床很远的位置，这样减少了蓝光的接触。当然偶尔也会有失眠的时候，我发现失眠往往是由于最近一段时间工作太累，白天过于焦虑引起的。每当进入这个状态，我就会在第二天及时调整，尽量早点下班回家锻炼。另外，我发现中午半个小时的午休时间，我几乎是趴到抱枕上立马就能睡着，如果晚上入睡也能每次都这么顺利就好了。此外，我发现让我失眠的另一个因素是喝咖啡，不论是上午还是下午，只要我一喝咖啡，晚上必失眠，而且是重度失眠，因此我就把咖啡戒掉了。&lt;/p&gt;
&lt;p&gt;疫情期间，很多小伙伴都开始变身大厨，公司有很多同事常年坚持自己带饭，有时候看到他们带过来的精致的饭菜，总是羡慕不已。我平日里很少做饭带到公司，不过周末的时候还是很乐意自己折腾一下。虽是经常做饭，也都是平日里常见的家常小菜，厨艺并没有太大提高，只是整个流程越来越得心应手。周末做饭的时候也会经常叫上室友老崔，老崔的厨艺比我好，老崔做菜的时候，我一般都在旁边给他打下手。自己在家做饭的一个直接后果就是容易吃胖，所以到下半年，体重直增加到接近 70 公斤，比我刚刚毕业那会儿足足胖了20斤，所以下一年还需要给自己立一个减肥的 Flag.&lt;/p&gt;
&lt;p&gt;5月末，S 说心情不好，一路从北到南到深圳来想要放松一下心情，我和 W 一起安慰她。她提到去年年底换了工作之后一直感觉压力巨大，而且和组长之间的关系也不是很好，现在已经有了轻度抑郁。我和 W 听完她的遭遇后都建议她回去之后换一份工作，换一个环境。后来，S 回到帝都开始寻求解决方案，各种尝试后终究还是辞了职，到年末终于找到了一份自己喜欢的工作，生活步入正轨。S 的事情给我挺大触动，因为我有时也会心情抑郁，情绪低落，不想说话，不愿意和外界沟通。S 回去之后，我也开始反思自己的状态，学习主动控制自己的心情，一旦当发现心情不好、情绪低落的时候立马作出调整，我发现这是一个不错的方法，整个下半年的负面情绪少了很多。&lt;/p&gt;
&lt;p&gt;年末时候，偶然发现胳膊上似乎有一个小肿块，突然间想起来后背上也有类似的一个，不禁打了一个寒颤，急忙去各个平台上查到底是什么。搜索出来的回答总是吓人的，我一度怀疑是肿瘤（这个现象是肿瘤发生了转移），于是那两天开始寝食难安，打算去医院的肿瘤科做一次检查。检查的前一天晚上，脑海里浮想联翩，想象着如果真的是肿瘤我该怎么办，是作为一名癌症斗士，勇敢的和病魔斗争；还是抓紧时间实现未完成的心愿，独自一人去旅游。第二天的检查很顺利，主治医生和彩超室的医生一致诊断说那个是脂肪瘤。或许是当时我的焦虑和恐惧都写在了脸上，主治医生开始安慰我，说这不是病，让我不要有任何担心，该吃吃，该喝喝。这件事儿过后，我竟有种从鬼门关里走过一回的感觉，如释重负，心情也愉悦了很多。&lt;/p&gt;
&lt;h3 id=&#34;读书&#34;&gt;读书：&lt;/h3&gt;
&lt;p&gt;算下来，今年只读了10来本书，比去年和前年少了不少。今年读的一些书除了小说之外，还有涉及社会学、经济学、人物传记等。下面的书我挑了一些整理了书评：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;枪炮、病菌与钢铁 —  [美] &lt;a href=&#34;https://book.jd.com/writer/%e8%b4%be%e9%9b%b7%e5%be%b7%c2%b7%e6%88%b4%e8%92%99%e5%be%b7_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;贾雷德·戴蒙德&lt;/a&gt; 著，&lt;a href=&#34;https://book.jd.com/writer/%e8%b0%a2%e5%bb%b6%e5%85%89_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;谢延光&lt;/a&gt; 译， 上海译文出版社&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是本书最早是在看《晓松奇谈》的时候高晓松老师推荐的。虽然高老师作为公知在2020年的直播节目中翻车被骂下神坛，但是这本书确是一本好书。作者戴蒙德是一位生物学家、人类学家，他以独特视角揭示了人类社会发展史。作者在书的开头提出很多非常有意思的发现并在后文中一一解答，例如：作为什么欧亚文明比世界其他文明更加先进？为什么小麦和玉米、牛和猪以及现代世界的其他一些“了不起的”作物和牲畜出现在这些特定地区，而不是出现在其他地区？以及来自欧洲的几百人 的队伍可以战胜美洲上千万人口的国家。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;房思琪的初恋乐园  — &lt;a href=&#34;https://book.jd.com/writer/%e6%9e%97%e5%a5%95%e5%90%ab_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;林奕含&lt;/a&gt; 著  北京联合出版公司&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这本书描写的是一位初高中少女被老师诱奸和性侵的故事。书中的语言描写虽然并不黑暗，也没有任何正面强暴的情节，但在看书的整个过程中那种压抑和无助感铺面而来，压得人透不过气，最终我没能读完这本书。&lt;/p&gt;
&lt;p&gt;实际上，这本书是根据真实故事改编而成。作者林奕含是1991年生的女生，父亲是台湾一名著名的医生。高中时林奕含被补习班老师性侵，自此患上了抑郁症，后来她将自己的故事改编成小说，2017年于家中自杀，2018年小说发表。林奕含是一位读书极多，极有才华的作家，她将自己的经历用细致，极美的文学语言表达出来。她曾说：如果你阅读时感受到痛苦，那是真实的，如果你阅读时感受到美，那也是真实的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;未穿的红嫁衣 &lt;a href=&#34;https://book.jd.com/writer/%e9%9c%8d%e8%be%be_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;霍达&lt;/a&gt; 著&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;​       这本书没有留下太多印象，我是在看完作者的另外一本《穆斯林的葬礼》之后找来的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;毛泽东传 — [英] &lt;a href=&#34;https://book.jd.com/writer/%e8%bf%aa%e5%85%8b%c2%b7%e5%a8%81%e5%b0%94%e9%80%8a_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;迪克·威尔逊&lt;/a&gt;（[Dick Wilson](&lt;a href=&#34;https://book.jd.com/writer/Dick&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://book.jd.com/writer/Dick&lt;/a&gt; Wilson_1.html)） 著，&lt;a href=&#34;https://book.jd.com/writer/%e4%b8%ad%e5%85%b1%e4%b8%ad%e5%a4%ae%e6%96%87%e7%8c%ae%e7%a0%94%e7%a9%b6%e5%ae%a4_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;中共中央文献研究室&lt;/a&gt; 译&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这本书的作者是一位美国人，他以相对客观的记事态度为毛主席作传，可以帮助我们重新认识、理解和评价毛泽东。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;邓小平时代 — 傅高义著 新知三联书店&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2020年看这本书似乎有一种特殊的意义，2020年中国政府在抗击肺炎疫情中的出色表现以及所有西方的国家的拉胯相比，几乎所有中国人的名族自信心都得到了空前提升，不仅名族自信心、名族自豪感得到提升，中国人的生活水平和之前相比不知好了多少倍。这一切都和一位老人有关— 邓小平，从某种意义上来说，我们现在仍处在邓小平时代，在改革开放40年之际重新翻开这本书对于我们理解中国的经济发展和未来发展方向有及其重要的意义。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;丰乳肥臀  — &lt;a href=&#34;https://book.jd.com/writer/%e8%8e%ab%e8%a8%80_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;莫言&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;莫言老师献给自的的母亲，也是献给天下母亲的伟大作品。莫言老师的作品某种程度上受到了马尔克斯的影响，书中有很多情节运用了魔幻现实主义的写法。整部作品跨越了民国、日本侵略、抗战、新中国、改革开发近百年的历史进程，深刻刻画了对于生命苦难的记忆。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;白夜行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;东野圭吾老师最好的一部嫌疑推理小说，没有之一。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浮生六记&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;整本书篇幅很短，非常有趣，尤其是书中写和芸娘的章节，非常欢快可爱。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;飘   — [美国] &lt;a href=&#34;https://book.jd.com/writer/%e7%8e%9b%e6%a0%bc%e4%b8%bd%e7%89%b9%c2%b7%e7%b1%b3%e5%88%87%e5%b0%94_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;玛格丽特·米切尔&lt;/a&gt; 著，&lt;a href=&#34;https://book.jd.com/writer/%e6%9d%8e%e7%be%8e%e5%8d%8e_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;李美华&lt;/a&gt; 译&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很早之前看过由这本书改编的电影《乱世佳人》，2020年终于有时间找到原著来看，书中对于女主—斯嘉丽的在遭遇跌宕起伏的人生经历之后性格变化和人物成长描写非常深刻。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;繁花 — &lt;a href=&#34;https://book.jd.com/writer/%e9%87%91%e5%ae%87%e6%be%84_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;金宇澄&lt;/a&gt; 著&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这是一本正在看的书，我是看的网上的推荐过来的，整本书以上海话来书写，却又非常容易理解，在阅读时总想象着上海人对话的方式和语气。我读《繁花》，读懂它的部分我觉得像《红楼梦》，没有读懂它的那部分我觉得就是《金瓶梅》。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;八次危机 &lt;a href=&#34;https://book.jd.com/writer/%e6%b8%a9%e9%93%81%e5%86%9b_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;温铁军&lt;/a&gt; 等 著&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;温老师是三农问题的专家学者， 读/听温老的书让人有一种醍醐灌顶的感觉。《八次危机》从中国经济史的角度深刻剖析了从1949年新中国建立到2008年经历危机，中国所经历的8次成规模的经济危机以及中国走出危机的办法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;告别百年激进  &lt;a href=&#34;https://book.jd.com/writer/%e6%b8%a9%e9%93%81%e5%86%9b_1.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;温铁军&lt;/a&gt; 等 著&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这本书是由温老师的演讲整理而成，可以在B 站找到演讲视频，觉得看书枯燥的可以结合老师的演讲来看。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;四世同堂&lt;/li&gt;
&lt;li&gt;美国陷阱&lt;/li&gt;
&lt;li&gt;认识电影&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;观影&#34;&gt;观影：&lt;/h3&gt;
&lt;p&gt;自从大学之后，看电影成为一种日常生活习惯，每次感觉有压力想要放松心情的时候总会看上一部电影。今年算上在线、影院和影评节目节目里看的电影，差不多有50多部，这个目标基本达成。下面是2020年观影列表，以后有时间我再单独整理出一份影评。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;无间道 (1,2)&lt;/li&gt;
&lt;li&gt;两杆大烟枪&lt;/li&gt;
&lt;li&gt;1917&lt;/li&gt;
&lt;li&gt;幸福的拉扎罗&lt;/li&gt;
&lt;li&gt;超脱&lt;/li&gt;
&lt;li&gt;爆裂鼓手&lt;/li&gt;
&lt;li&gt;三块广告牌&lt;/li&gt;
&lt;li&gt;勇士&lt;/li&gt;
&lt;li&gt;桃姐&lt;/li&gt;
&lt;li&gt;为奴12年&lt;/li&gt;
&lt;li&gt;我们的幸福时光&lt;/li&gt;
&lt;li&gt;幸运是我&lt;/li&gt;
&lt;li&gt;双旗镇刀客&lt;/li&gt;
&lt;li&gt;老男孩&lt;/li&gt;
&lt;li&gt;金氏漂流记&lt;/li&gt;
&lt;li&gt;激战&lt;/li&gt;
&lt;li&gt;翻滚吧阿信&lt;/li&gt;
&lt;li&gt;小鞋子&lt;/li&gt;
&lt;li&gt;独自等待&lt;/li&gt;
&lt;li&gt;天若有情&lt;/li&gt;
&lt;li&gt;大话西游（1，2）&lt;/li&gt;
&lt;li&gt;假如爱有天意&lt;/li&gt;
&lt;li&gt;我脑中的橡皮擦&lt;/li&gt;
&lt;li&gt;狼少年&lt;/li&gt;
&lt;li&gt;送你一朵小红花&lt;/li&gt;
&lt;li&gt;心灵奇旅&lt;/li&gt;
&lt;li&gt;拆弹专家2&lt;/li&gt;
&lt;li&gt;紧急救援&lt;/li&gt;
&lt;li&gt;疯狂原始人&lt;/li&gt;
&lt;li&gt;一秒钟&lt;/li&gt;
&lt;li&gt;除暴&lt;/li&gt;
&lt;li&gt;风平浪静&lt;/li&gt;
&lt;li&gt;金刚川&lt;/li&gt;
&lt;li&gt;源代码&lt;/li&gt;
&lt;li&gt;钢琴家&lt;/li&gt;
&lt;li&gt;楢山节考&lt;/li&gt;
&lt;li&gt;社交网络&lt;/li&gt;
&lt;li&gt;甜蜜蜜&lt;/li&gt;
&lt;li&gt;狩猎&lt;/li&gt;
&lt;li&gt;热天午后&lt;/li&gt;
&lt;li&gt;牯岭街少年杀人事件&lt;/li&gt;
&lt;li&gt;第六感&lt;/li&gt;
&lt;li&gt;冲锋队之怒火街头&lt;/li&gt;
&lt;li&gt;爆裂鼓手&lt;/li&gt;
&lt;li&gt;绿里奇迹&lt;/li&gt;
&lt;li&gt;恐怖直播&lt;/li&gt;
&lt;li&gt;喜宴&lt;/li&gt;
&lt;li&gt;七武士&lt;/li&gt;
&lt;li&gt;空房间&lt;/li&gt;
&lt;li&gt;勇敢的心&lt;/li&gt;
&lt;li&gt;初恋这件小事&lt;/li&gt;
&lt;li&gt;赛德克·巴莱&lt;/li&gt;
&lt;li&gt;那山那人那狗&lt;/li&gt;
&lt;li&gt;放牛班的春天&lt;/li&gt;
&lt;li&gt;到阜阳六百里&lt;/li&gt;
&lt;li&gt;行走距离&lt;/li&gt;
&lt;li&gt;蓝色大门&lt;/li&gt;
&lt;li&gt;以女儿之名&lt;/li&gt;
&lt;li&gt;电话&lt;/li&gt;
&lt;li&gt;天堂电影院&lt;/li&gt;
&lt;li&gt;看不见的客人&lt;/li&gt;
&lt;li&gt;站台&lt;/li&gt;
&lt;li&gt;伴我同行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;除了电影，2020年还看了几部高质量的电视剧，其中三部是由紫金城的小说改编而成，分别是《隐秘的角落》、《沉默的真像》和《无证之罪》。另外两部来自于正午阳光出品的《大江大河》和《山海情》。&lt;/p&gt;
&lt;h3 id=&#34;新年计划&#34;&gt;新年计划&lt;/h3&gt;
&lt;p&gt;2020年虽说没有定目标，但是整体感觉完成还是不错的，所以从今年起不妨给自己做一个new year to do list 试试，万一都做到了呢？😆&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;学习弹唱几首简单的曲子&lt;/li&gt;
&lt;li&gt;在编程能力上更进一步&lt;/li&gt;
&lt;li&gt;坚持每周2~3次锻炼强度&lt;/li&gt;
&lt;li&gt;再读 30 本书&lt;/li&gt;
&lt;li&gt;练习英语口语&lt;/li&gt;
&lt;li&gt;为陈晓旭作个小传&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>童年的渴望</title>
      <link>https://jianzhnie.github.io/post/%E9%9A%8F%E7%AC%94/</link>
      <pubDate>Mon, 08 Apr 2019 16:01:23 +0800</pubDate>
      <guid>https://jianzhnie.github.io/post/%E9%9A%8F%E7%AC%94/</guid>
      <description>&lt;h2 id=&#34;童年的渴望&#34;&gt;童年的渴望&lt;/h2&gt;
&lt;p&gt;关于渴望这个话题，我想写它已经有好一阵子了。这里的渴望没有毛阿敏的《渴望》那么高端，只是我成长过程中的一些幼稚的渴望罢了。其实内心一直都有写作和表达自己的想法，也零零碎碎想过一些，但每当我把它写出来的时候总是感觉十分不满意。第一次明确想要表达这个话题是在今年一月份的时候看到益辉师兄关于童年生活的博客，而第一次隐约考虑这个话题大概是在大学期间读路遥的小说《平凡的世界》，里面主人公的成长的经历对于我有着极强的代入感。至于这次所写的内容，都是我小时候亲身经历过的，希望童年的乐趣能够弥补写作技巧上的不足。我写这篇回忆杀，一方面是想对比一下自身现今和过去的渴望；另一方面，随着年龄的增大，有些关于儿时的记忆也渐渐模糊，希望能够把它记录下来。我总觉得现在的渴望太廉价——这些渴望被人为的、快速制造，随即又会被人为、快速满足，比如点赞和网购。而我从小到大渴望的东西很多，而且多数最终都没能满足，但是现在想来，这些无法满足的渴望也成为了生活的部分意义。&lt;/p&gt;
&lt;p&gt;小时候，没有电子设备占据时间，我就会整日里在村子里游荡，从这个田窜到那个田，从这个山跑到另一个山。没有玩具，我们就自己做，比如跳皮筋、叠飞机、做弓箭、弹弓、造飞轮、回风旋。没有零食，我们去山上自己摘，春天摘矛莓，樱桃，夏天摘杏子、李子、野葡萄，山楂，猕猴桃；秋天有柿子、板栗、八月炸； 冬天还有寒莓、拐枣。&lt;/p&gt;
&lt;h2 id=&#34;讲故事&#34;&gt;讲故事&lt;/h2&gt;
&lt;p&gt;我的童年几乎没看过什么童话书和故事书，唯一有印象的是在二叔家看到几本西游记和葫芦娃的故事书，如获至宝，那个下午便蹲在那里一口气看完了，后来去的时候又翻了好几遍。童年最有意思的事情就是听大人们讲故事，虽然那些关于水鬼、迷路神的故事现在听起来很荒谬，但在当时确是津津有味，极大地勾起了我们的好奇心。我还记得经常围着火炉子让妈妈给我讲故事， 妈妈讲得故事非常有趣又很有道理。后来上了学，我就把这些故事讲给班里的同学们们听，同学们都非常感兴趣。一到下课，大家都围到我的座位上来。后来，班主任在班里举办了一次故事会，每个人都走上讲台把自己的故事讲给全班人听。然后，我就把我妈妈给我讲得故事在台上讲了出来，那个故事需要用方言讲才好听，我上台之后或许因为紧张，就是在方言和普通话之间切换不过来，然后自己在讲故事的过程中又忍不住笑场，把同学们也逗得哈哈大笑。最终，老师还对我的故事做了点评，把讲故事的第一名颁给了我，于是，然后我就成为了班里公认的故事大王。&lt;/p&gt;
&lt;h2 id=&#34;花草&#34;&gt;花草&lt;/h2&gt;
&lt;p&gt;我家门前有一块空地，那是我小时候种花种菜的地方。最早的时候，每次我妈妈在那块地里干活，我就在旁边看着，问各种小孩子都会问的问题。我看到妈妈把蔬菜种子埋进去，过不多久就会长出嫩嫩的芽来，我就会忍不住总是过来浇水，看着那些苗儿一天天长高，心里别提多高兴了，到了结果实的时候更是兴奋的不得了。从妈妈那里学到了种东西的经验，到了后来，我便要来了那块地的控制权。春天来的时候，开始松土施肥，然后我从我妈那里找来了丝瓜、葫芦种子分别种下去（这两样都是我最爱吃的），覆土盖好。然后每天放学总会跑过去蹲在那看他们长了没有，浇水，除草，看他们一天天长高，等到丝瓜和葫芦开始吐丝生蔓的时候，我又跑到山上去捡来竹子、树枝来给它们搭好架子。然后到夏天的时候，那些丝瓜、葫芦就顺着搭好的架子长得铺天盖地，一个夏天吃了不少美味的葫芦炖腊肉和丝瓜汤。那几年的夏天，经常也可以吃到自己种的西红柿，那是我们当地的品种，和大拇指差不多大小，吃起来酸酸的，又有一股味精的味道，简直就是人间美味。&lt;/p&gt;
&lt;p&gt;除了种菜，当然我还种花草，望春花，芍药花、栀子花，山茶花，茉莉花，野百合，大菊、小菊，麦冬草，金钱草&amp;hellip;&amp;hellip;那几年，我家的院子就像是一个小花园，有很多花我是从山上挖回来移栽到院子里的，还有一些是问别人要的种子种下去的，就这样，一年四季，院子里都会有花的香味。那个时候，做完家务活之后我最大的乐趣就是照看这些花草，浇水、翻土、剪枝，打岔，就像是幸福的园丁。&lt;/p&gt;
&lt;p&gt;再后来，搬家了，那些花花草草带不走，没人照顾，好多都枯萎了。过了好些年，我过年回了趟老家，欣喜地发现那些麦冬草和金钱草竟然都还活着，麦冬草长的很茂盛，而且发展成大片大片的。我欣慰极了，于是乎又找来锄头给他们翻起土来。&lt;/p&gt;
&lt;p&gt;又过了几年，我毕业来到城市工作，和陌生人合租住在一个闭塞的小物子里，又想起小时候的那个小花园，心中依旧念念不忘。不知道何时自己能买得起房子，在房子旁边再开辟一块土地来种上花草，然后把这些教给自己的娃。&lt;/p&gt;
&lt;h2 id=&#34;电视机&#34;&gt;电视机&lt;/h2&gt;
&lt;p&gt;和我的同龄人一样，我小时候有极大的电视瘾，主要是爱动画片和古装武侠片。小时候大部分时间都是在别人家蹭电视，直到2000年过年的时候我家才有了第一台电视机。因为蹭电视无法保证连续性，所以有些片子缺头、缺尾或隔三差五缺一集。因此有些错过的电视情节，我是纯粹靠别的同学讲来听然后自己脑补回来。当时我们那个小孩子似乎都练就了这样的功夫，头一天看完了电视剧第二天讲给没看过的小伙伴听，而且讲得有声有色，遗漏的情节大家互相补充，竟把一个情节讲得十分完整，其他的小孩子也都听得津津有味。&lt;/p&gt;
&lt;p&gt;上小学的时候，一到放学都会拼命跑回家，第一时间写完作业，然后守候着电视机看六点左右播出的动画片。动画片中我最喜欢的就是《啄木鸟》和《猫和老鼠》了，当时是中央一台的大风车里播出，那只笑声魔性的逐木鸟一出场，咯咯咯 咯咯 咯咯咯 咯咯 咯咯咯咯咯，我就被逗得哈哈大笑。还有汤姆和杰瑞那一对冤家，动画片里的那只猫永远斗不过老鼠，虽然这些动画片每集只有几分钟，真的是百看不厌。后来又看了《奥特曼》，除了奥特曼动画片，当时还流行集奥特曼和怪兽卡片，卡片背面是超能力的介绍。因此对于每个奥特曼甚至每个怪兽的名字和其特点，我们都记得滚瓜烂熟，这个也成了我们那个年纪的小孩在一块玩所特有的语言。除了奥特曼，我当时还看了《铁甲小宝》，但是没有看完，只记住了小宝和人类小伙伴去寻找和平星拯救人类的故事。《犬夜叉》也是，只在别人家里看了一两集，后来在学校里听同学讲补充了一些情节，最后就一直没有机会看，总之念念不忘。当然国内的动画片也看了一些，比如《蓝猫淘气三千问》，这个动画片就是一个科普节目，当时看起来还是蛮有趣的，学到了很多科普知识，后来我弟也是超喜欢这个动画片，看完了经常讲给我妈听。&lt;/p&gt;
&lt;p&gt;除了动画片，武侠片也看了一箩筐，印象最深的还是《天龙八部》，当然是黄日华、陈浩明那版。虽然忘记了这部电视剧是在谁家看的，也是陆陆续续的没有看完，不过这个片子好多情节都印在脑海中，比如段誉在山洞意外学得凌波微步，就像自己意外获得绝世武功一样高兴；乔峰每次出场都霸气十足，使出降龙十八掌时的配乐和特效简直碉堡了，在聚贤庄与各大门派决战，后来一人击退十万大军都看得人热血沸腾；乔峰、段誉、虚竹三人结拜痛饮，便觉得豪气冲天；最后，痴情的段誉终于赢得王姑娘的芳心，我竟比他还高兴。还有古天乐李若彤版的《神雕侠侣》在我内心也是无法超越的，古天乐那个时候还是白白净净的，真是帅呆了，李若彤饰演的小龙女真的就跟仙女下凡一样。后来看到尹志平和小龙女那集，我和小伙伴都气的牙痒痒，我甚至想要钻到电视里把他揪出来暴打一顿。家里买电视机的那年，《还珠格格》开始火遍大江南北，这部电视剧应该是第一部我完完整整看完的电视剧，而且不止一遍，从第一部一直追到第二部，再到后来原班人马演的的《情深深雨濛濛》。《还珠格格》电视剧热播那两年，我们那些小孩子都学会了哼唱电视剧里面的主题曲，“你是风儿，我是沙，缠缠绵绵到天涯&amp;hellip;” ，然后一路哼唱着去上学，然后再唱着歌儿回家。还有李亚鹏许晴那一版《笑傲江湖》同样堪称经典。记得当时是在下午午间新闻结束之后才开始播，每天两集，不巧的是当时正在上学，下午两点多就要上课。我家正好在离学校比较近的村口，因此吃过午饭，一群上学的孩子都跑到我家来看电视剧，看完第一集就一点多了，胆子小的孩子就跑去上学去了，我们有几个胆子比较大的继续等着看第二集。如果第二集看完就两点半了，因此第二集只看一半，我们就得飞奔跑去学校，就这样把整部剧看完了。当然有很多遗漏的情节，只能等到重播的时候再看一遍。记得有一年去姥姥家过暑假，姥姥家没有电视，就去邻居家看，当时有一部《小李飞刀》，零星的看了几集，觉得小李飞刀甩刀的那种潇洒也很符合我的胃口，后来不知因为什么原因没能接着看。有一阵子，电视信号不太好，荧屏上有很多的麻点，我不知从哪里学来的经验：一定是天线被风吹歪了。于是乎就蹭蹭蹭跑向楼顶，抱着那根电视天线杆，向左转再向右转，然后我弟在下面看电视画面有没有好起来，转天线杆偶尔有用，但很多时候只好将就着看。&lt;/p&gt;
&lt;p&gt;看完那些武侠片，一群孩子上学路上最喜欢讨论的就是电视剧中哪种武功最厉害，但是争论总是没有止境的，除了争论这个，我们还经常模仿那些绝世武功，比如降龙十八掌、六脉神剑，吸星大法，乾坤大挪移等等。无论是动画片还是武侠片，都极大的勾起了童年的好奇心和想象力。现实世界，我们不可能腾云驾雾，给我一根棍子我用吃奶的力气也蹦不了两米，所以那个虚拟的飞檐走避的世界格外吸引人。动画片和武侠剧我大概还知道是假的，但当年还播了一部神剧叫《排球女将》，这对我来说就有些难辨真假了；主角小鹿纯子那跳起几米高的必杀技让我们无比羡慕和崇拜，我被这片子吸引得入了迷。直到若干年后，我自己学会了打排球，还想着苦练旋转日月和晴空霹雳的招数。相信那些小时候看过《灌篮高手》的孩子同样也会对樱木花道的球技痴迷，为之疯狂，喜欢上篮球。&lt;/p&gt;
&lt;p&gt;现在很多人都说现在的电视剧没有小时候的好看了，我想：小时候的这些着迷和如今让我们着迷的事物对比起来，有两个显著的区别。一是小时候的迷恋是有尽头的：剧播完了，也就完了。二是无论你如何着迷和渴望，你都无法对抗一些物理条件，比如停电或电视坏掉，一天只有一集，错过就错过了。如今的剧，最大的特点就是可以无限看；优酷土豆爱奇艺，任何一家视频网站，只要你打开，你就可以娱乐至死，没有数量限制，没有频率限制，没有电源限制，没有硬件限制。还有一个可能因人而异的区别，就是我小时候的迷恋会影响我的物理生活，比如我会自制刀剑、弓箭、飞镖或打狗棒，或爬树、上房（我能活到今天也算是个奇迹）。&lt;/p&gt;
&lt;h2 id=&#34;方便面&#34;&gt;方便面&lt;/h2&gt;
&lt;p&gt;农村人一天三顿并没有什么区别，早中晚都是大米饭就菜。不像城里人，早饭是一顿特殊的饭（多为面食），小时候上街看到早餐摊卖油条、煎饺总馋的不得了。我上小学时候有些同学的家长不愿大清早起来做饭，就给孩子买几箱方便面，早上起来泡个面了事或者直接带一袋干吃面路上吃。我的早餐基本都是自己解决，尤其是在冬季的时候，早上起来做一份炒饭当早餐，或咸菜炒饭，或蛋炒饭。我很羡慕有方便面吃的同学，只记得当时有两种牌子的方便面：北京方便面和南街村方便面，都是麻辣口味。大家吃方便面话会攒下一些调料包，放学路上把那些粉末倒在手里，然后几个人围一块儿用食指蘸着舔着吃。我家其实偶尔也会买方便面，妈妈叫我早餐煮着吃，所以我的早饭总是炒饭和煮面穿插着，所以也会偷偷存着调料包。那麻辣味道的调料确实是又麻又辣，有时候我嫌干吃太辣，就把调料包到在杯子里然后用开水冲着喝，也很解馋。这种对方便面的馋从小学延续到了初中。上初中时，住校的学生通常是一个班住一个宿舍，每天下了晚自习，其实肚子就有些饿了，宿舍总会有同学拿着方便面在床上摸着黑干嚼，有时候关系好的同学也分我一块。到了高中之后基本没怎么住校，生活条件也渐渐好了，早中晚基本在家吃，对于方便面就没有那么渴望了。&lt;/p&gt;
&lt;h2 id=&#34;柿子&#34;&gt;柿子&lt;/h2&gt;
&lt;p&gt;再来说水果。小时候上街赶集，闻着街上的苹果香蕉味馋得不行，但几乎没机会吃到。我印象里比较深刻的一次是我爸从外面打工回来，带回家几斤提子，那是我第一次见到这种水果，细长的椭球的形状，皮是绿绿的，像玛瑙一样。我当时还以为是葡萄，但是吃起来又无核而且比葡萄甜了好几倍，那是当时我吃过最好吃的水果，至今记忆尤新。
每年秋收之后，就会有水果贩子将北方的苹果大车大车的运到村子里来卖，可以拿钱买也可以拿粮食换，差不多两斤谷子换一斤苹果，当时农村人都很穷，很少有人花钱买，但是刚刚秋收完，每家都有很多粮食，于是大家就都愿意扛着一袋谷子去换苹果。于是乎，水果贩子才走完几个村子，满满一车的苹果就变成了一大车粮食。&lt;/p&gt;
&lt;p&gt;过年时有些亲戚家会买甘蔗，我家也会买，这货让人又爱又恨，因为它很甜，但吃起来实在费牙，啃得牙龈出血是常有的事，一年中毕竟过年也就那么几天，剩下的日子里几乎不会有机会啃甘蔗，一个解馋的办法就是啃高粱杆，我们当地有一种甜高粱的品种，几乎每家每户都会在地头种上一些，给小孩子吃，那里面的芯也有很甜的味道，但是啃起来比甘蔗要轻松许多，所以在没有甘蔗啃的时候，我们都啃那个，乐此不疲。&lt;/p&gt;
&lt;p&gt;我们村里自产的水果基本只有一样，那就是柿子，村子霸上的地里有好多棵柿子树，我家门前也有一棵。我对柿子的渴望还持续了蛮长时间，主要是到秋天之后，基本上所有树叶都落了，这个时候柿子就特别显眼，远远望去黄橙橙的挂在枝头，总能勾起内心的渴望。村子里的柿子树一般都很高，像我们这些小孩子是很难上去的，如果这个时候我爸在家的话都会去树上去摘半箩筐回来。刚刚摘回来的柿子虽然颜色黄了，但还是硬邦邦的，需要放软了才能吃。为了让柿子熟得快一点，妈妈教我把它埋在谷子堆里，借助谷子散发的热量让柿子快点熟透。于是，每过上几天，我都会爬上谷仓去把柿子一个个翻出来捏一捏看哪些已经可以吃了，基本上每次都会有2~3个熟透了。先用清水冲去柿子表面的灰尘，然后拔出柿子顶部的叶子，把嘴凑上去一吸，整个果肉就全到嘴里了，凉凉的，甜甜的，那种感觉真是美极了。&lt;/p&gt;
&lt;p&gt;关于柿子还有一件事让我印象深刻，等我长到10岁左右的时候便开始自己上树摘柿子，当时也确实像个猴一样，那么难爬的树爬上爬下就跟闹着玩一样。因为害怕柿子从树上掉下去摔烂了，便一直爬到树梢亲自用手去摘。有一回我抓着的那根树枝突然断了，整个人从树上摔下来，当时摔得不省人事，妈妈赶紧找来了爷爷把我背起来送往医院。最终检查结果只是左手骨折，真是万幸，后来用石膏做了个夹板把手固定住，然后用一根吊带挂在脖子上，三个月后才拆除。那段时间，每当大人们谈起这件事总说我福大命大，因为我家门前的那颗柿子树下有一块乘凉的大石头，而我恰好掉在大石头外面，如果掉到石头上，小命早就没了。我自己当时倒没什么感觉，竟然一滴眼泪也没有流过，不过那过后的三个月应该是我最安分的一段时间，一只手被固定住了，啥都做不了。&lt;/p&gt;
&lt;p&gt;后来去很远很远的地方上大学，有一次坐火车，透过车窗看到了外面的柿子树，红彤彤的柿子挂满了枝头，像灯笼一样，便想起小时候光着脚爬上树去摘柿子的情景，然后吃柿子的那种甜蜜就会随之沁上心头。&lt;/p&gt;
&lt;h2 id=&#34;西瓜&#34;&gt;西瓜&lt;/h2&gt;
&lt;p&gt;人穷的一个结果是总盼着捡便宜。一笔意外之财通常能带来无比的满足感。比如我有个同学曾经捡了五块钱，立刻去买了根两毛钱的雪糕吃，可把我眼红坏了，因为五分钱的冰棍对我都是奢侈品。我小时候最大的一笔意外之财是有一次在山上采兰花的过程偶然间在灌木丛中找到一大窝野鸡蛋，差不多有十几个，于是我小心翼翼的把那些野鸡蛋一个个装进口袋带回了家。带回家后，我像捡到宝一样拿给妈妈看，我妈说那是用来孵化的蛋，不让小孩子吃，后来让我爷爷拿过去煮了吃了。我虽然没吃到，但是依然很兴奋，打那以后，如果在野外突然看到野鸡从丛中飞起来，就会情不自禁的飞跑过去，用棍子在草堆里面扒拉，也曾经零星的找到过两个蛋，但是再没有过那样的辉煌战绩和意外的喜悦了。&lt;/p&gt;
&lt;p&gt;实在没便宜可捡的时候，我们的口号是创造便宜也要捡，也就是去偷鸡摸狗。小学的时候放暑假通长都有两个多月时间，我总是在自己家过一个月然后到姥姥家住上一个月。还记得当时姥姥村子里有人种了好大一田的西瓜，等到西瓜快要成熟的时候，瓜农就会在田头搭一个草棚，有位老大爷日夜看守，防止有人来偷瓜，通常还会养一条狗。有两次，我和表弟假装从瓜田上面的田埂路过，数着田里熟透了的大西瓜，馋的不得了，但是又不敢下手，因为稍微有点动静，那只狗就开始狂叫起来，吓得我和表弟赶紧溜了，几次下来我对老头田里的西瓜是一种紧张而刺激的渴望。&lt;/p&gt;
&lt;p&gt;当然，也不是完全没有机会，一种正常的，不会被骂的方式的捡便宜方式就是等到西瓜快要结罢的时候，田里也基本没有什么特别好的西，这时候，老大爷就会从瓜田里面撤出，白天偶尔去看一下，捡几个瓜带回家。然后等到趁傍晚时分，这个时间，田里的庄稼人都回家吃饭了，我们便跑到瓜田里去寻那些漏掉的西瓜。这也是很有趣的活动，主要是剩下的瓜非常少，得仔细得拨开满地的藤蔓瓜叶去找。虽然来说，西瓜在我们农村人来说早已不算什么稀罕物，夏季是最便宜的水果了，大热天家家户户都会买西瓜吃，但是这种人为创造出来的稀缺条件会让人产生一种渴望：大概找了几十株之后，我们便顺着藤找到了一个别人没有注意到的大西瓜，然后我和表弟就在瓜田里把瓜开了，一人一半大口大口的吃起来，那种紧张刺激感，我现在依然记忆尤新。&lt;/p&gt;
&lt;h2 id=&#34;红薯干&#34;&gt;红薯干&lt;/h2&gt;
&lt;p&gt;每年冬季或者开春的时候，我们那边很多人家都会晒红薯干。至于为什么要在这个时候晒是有道理的，我还特意问过妈妈这个问题。红薯是深秋的时候（每年农历9月到10月）才从地里挖回来，刚刚挖回来的红薯含水分太多，不是很甜，需要先在太阳下晒几天，让红薯变软一些，然后放在干燥通风的地方地上晾上一段日子，等到糖分沉积之后才好吃。或者直接送到红薯窖里面藏起来，等过完年初春的时候再从窖里把红薯搬出来，这个时候的红薯就非常甜了。我妈妈每年都会晒红薯干，把红薯先削皮洗净然后放在大锅里面蒸熟，蒸熟的红薯需要等完全冷却下来，然后拿到楼顶上放到准备好的竹筛里晾起来，当然，妈妈总不会忘记会把蒸好的红薯给我留上好几个，让我吃饱。红薯晾了一天一夜之后就没有那么黏，这个时候用刀切成薄片，切好的红薯片放在竹筛上摊平，然后放在太阳下晒就可以了，当然为了让口感更好，晚上的时候适当露一下就更好了。妈妈做的红薯干总是又甜又有嚼劲，到了秋冬季节就成了我们小孩子口袋最好的零食了。&lt;/p&gt;
&lt;p&gt;当然，有些时候红薯干放在太阳下晒得太久就会变得非常硬，极其难嚼，一条高韧度的红薯干放嘴里不知要通过多少口水才能磨烂。我的牙口至今还算不错，后来经常用牙开啤酒，可能跟小时候啃这些东西有关。&lt;/p&gt;
&lt;p&gt;后来上大学，每年年后开学，我妈总会给我的行李箱中塞上特别多吃的东西，红薯干、板栗、黑花生等等，满满的一大箱子，这些都是家里的土特产，妈妈特意嘱咐我带到学校去和大学的同学分一下。因此，每年开学我总是拖着重重的行李箱，坐上一天一夜的火车回到学校，当我把这些东西拿给同学们吃的时候，这些东西就成了大学同学眼中的稀罕物什，同学们都说非常好吃。以至于后来，他们都开始惦记这些东西，我每次放假回家总不忘叮嘱我要带点土特产回来。&lt;/p&gt;
&lt;p&gt;最近几年我也没有吃到妈妈晒的红薯干了，一个原因是现在家里不种地，没有了红薯；再一个现在住的地方实在是不太容易晒。当然我妈又新发明了油炸红薯干，又甜又香又脆，完全取代了我对之前那种红薯干的渴望。&lt;/p&gt;
&lt;h2 id=&#34;大头雪糕&#34;&gt;大头雪糕&lt;/h2&gt;
&lt;p&gt;小时候夏天最喜欢吃的就是大头雪糕。其实我当时很少花钱买零食吃，却唯独对大头雪糕印象格外深刻，大头、大头，下雨不愁，别人有伞，我有大头。小时候，那种圆圆的头特别大的冰激凌非常流行，垂涎了好久，需要5毛钱一个，不过当时觉得还是蛮贵的，因为上学的时候兜里根本没有零花钱，每次见别的小孩吃总是馋的不得了。到了暑假，我就和表哥一起去倒闭的纸厂拾废铁卖，一次能攒几块钱，有了钱之后最高兴的事就是去买大头雪糕，买回来，坐在凳子上细细评味。最上面一层是黑黑的脆皮巧克力，吃的时候总是先把那层皮吃了，再吃下面的奶油，凉凉的，惬意舒适，沁人心脾，而且一点儿不腻，吃的时候不停的舔，怕雪糕化了流到手上。雪糕外面用那种厚厚的蛋皮裹上，吃完雪糕，最后把蛋皮吃下去。长大后吃了很多冰激凌，可是再也吃不出那样的味道了………&lt;/p&gt;
&lt;p&gt;当时还有一种小零食对于我们非常有诱惑力，那就是小孩子最喜欢吃的也是我最经常买的辣皮，是辣皮不是今天我们还在吃的辣条，因为辣皮更容易入味，而且还便宜，一毛钱一张。买来之后一下一条的撕着吃，虽然被辣的冒汗龇牙，还是忍不住，吃完了还不忘舔舔手上的油。辣条的味道可能是属于那个时代的记忆，现在虽然到处都能买的到，但是却吃不出以前的味道了。&lt;/p&gt;
&lt;p&gt;说完吃的再说说喝的。一到夏天，学校门口的小卖部就会卖一种称之为冰袋的饮料，一毛钱一袋，通常被冻的像石头一样。在角上咬一个小口，慢慢吮吸，特别解暑，甜甜的带有淡淡的香味。喝完之后把袋子吹鼓了放在地上，然后猛踩袋身，经常就是砰的一声巨响。这个饮料在当时非常流行，简直就是为我们这些熊孩子量身定做的，等到长大后它就消失了，写到这里，于是我上网搜了一下，结果在好几个论坛里面大家都在回忆那个时代的零食：唐僧肉，辣皮，泡泡糖，七个小矮人雪糕&amp;hellip;， 看来不只是我一个人还在心里念叨。&lt;/p&gt;
&lt;h2 id=&#34;玩具枪&#34;&gt;玩具枪&lt;/h2&gt;
&lt;p&gt;男孩子小时候都喜欢枪，尤其是火炮枪（一丁点火药，打了也就是冒个烟而已），我印象中自己也有过一把玩具枪，可以打塑料子弹的那种。玩具枪刚刚买回来特新鲜，到处炫耀，然后又不知从什么地方找到一顶带军徽的帽子，戴上帽子，手里拿着枪，真是神气极了。于是，我就带着军帽，端着枪到村子里走了一圈，就有好多小孩子跟上来了。我就给他们列队，走成一排，1，2，3，4 报数。那群小孩子围过来当然也就是想要玩一下，过把瘾，我当然也很乐意把枪给他们摸一摸来换取领导权。当然这种枪是不耐玩的，通常枪膛里面的弹簧拉几次就坏了，也就没法打子弹了。&lt;/p&gt;
&lt;p&gt;我爷爷曾经教我用一节竹筒做过一种简易枪，就是竹筒前面挖两个相对的孔通过竹节，上面的那个孔再继续向前开出一道槽，后面靠近竹节处挖一个小孔，然后用一片弹性好的篾片，一头插在后面的孔里，扳弯篾片后另一头插在前面贯穿的孔里，稍微穿过那个孔一点点。竹筒的前端是开口的，后端有竹节封闭。这样插好篾片之后，把一粒小石子从枪口放进来，挡在篾片上，按一下扳机，也就是那篾片，把篾片从孔里顶上枪膛，这样篾片就会向前把石子弹出去。这枪基本上毫无威力，作为玩具只能说聊胜于无了。&lt;/p&gt;
&lt;p&gt;后来他又教我做了另一种叫哨子枪的枪，也是用竹筒，只不过是用空气压缩原理，而不是篾片弹力。这哨子枪就是一节两端都开口的细竹筒，前端开口之后的竹子不要了，后端开口时，要在离竹节大约三五厘米的地方割开，然后把一根筷子插在这个竹节里。如果插不牢的话，就在筷子根部缠一些纸之后再插进去。玩法是在竹筒的两端各塞一团浸了水的纸（要压紧），然后用筷子顶好一端的纸团，用手掌猛拍竹节，用压缩的空气把另一端的纸团打出去。这枪比前面那种枪好玩一些，主要是因为它会砰地一声响，而且越用力拍越响，因为有少许水的缘故，打出去之后还会冒一丝水雾，很有枪味。做这种枪我不知浪费了多少根筷子。后来我嫌塞纸团、捡纸团麻烦，就演变为只塞一团纸，然后把枪往田里或湿地里一插，拔起来就会有一团泥塞在枪头，用这团泥作子弹，打起来就方便多了。&lt;/p&gt;
&lt;h2 id=&#34;弹弓&#34;&gt;弹弓&lt;/h2&gt;
&lt;p&gt;这种玩具枪的愿望难以满足，主要是没有威力的武器对小男孩来说玩起来不过瘾。弹弓算是一种既有一定威力又方便自制的玩具。第一次玩弹弓是表哥带我玩的，我跟着他一起去山上打鸟。
因为它有危险性，所以小学老师都禁止我们玩，但这无法阻止我们在家偷偷玩。&lt;/p&gt;
&lt;p&gt;最初我没有强力的皮筋，只能用扎头发的小皮筋连一串起来做弹弓，但显然威力不够大。后来好不容易找到了皮筋，绑树杈上做了个弹弓，提着到处找鸟打，但鸟通常都有很高的警觉性，发现有人瞄准它就会飞。唯有一次在我家后面的一丛竹子里我打到过一只喜鹊，打到的主要原因是它在竹丛里被我吓得惊慌失措、想飞出去却被竹子到处挡住。真正打下来一只鸟之后我又觉得它很可怜，后来再也不弹鸟了，改作无害的打靶。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
